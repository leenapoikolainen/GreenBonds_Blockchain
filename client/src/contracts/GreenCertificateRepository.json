{
  "contractName": "GreenCertificateRepository",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "certificate",
          "type": "address"
        }
      ],
      "name": "CompanyCertification",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "company",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "project",
          "type": "string"
        }
      ],
      "name": "ProjectCertification",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "company",
          "type": "address"
        }
      ],
      "name": "isCertifiedCompany",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "company",
          "type": "address"
        }
      ],
      "name": "getCompanyCertificateAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "company",
          "type": "address"
        }
      ],
      "name": "getCertifiedProjects",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "company",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "project",
          "type": "string"
        }
      ],
      "name": "isCeritifiedProject",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "company",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "project",
          "type": "string"
        }
      ],
      "name": "createCertificate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"certificate\",\"type\":\"address\"}],\"name\":\"CompanyCertification\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"ProjectCertification\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"createCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"}],\"name\":\"getCertifiedProjects\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"}],\"name\":\"getCompanyCertificateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"isCeritifiedProject\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"}],\"name\":\"isCertifiedCompany\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"CompanyCertification(address)\":{\"details\":\"Event to be emmitted when a company certificate is created\"},\"ProjectCertification(address,string)\":{\"details\":\"Event to be emmitted when a project is added\"}},\"kind\":\"dev\",\"methods\":{\"createCertificate(address,string)\":{\"details\":\"Function to create a new certificate.  Can be only called by the owner of the contract. Creates a new certificate contract if one does not exits  for the company. Adds the project to the list of certified projects.\"},\"getCertifiedProjects(address)\":{\"details\":\"Function to get a list of certified project for a company. Requires that a certificate for the company exists.\"},\"getCompanyCertificateAddress(address)\":{\"details\":\"Function to get the address of the company's certificate. Requires that a certificate for the company exists\"},\"getOwner()\":{\"details\":\"Function to return the owner of the certificate (Green certifier) \"},\"isCeritifiedProject(address,string)\":{\"details\":\"Function to check if a project is certified. Requires that a certificate for the company exists.\"},\"isCertifiedCompany(address)\":{\"details\":\"Function to check if a company is certified\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/GreenCertificateRepository.sol\":\"GreenCertificateRepository\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"project:/contracts/GreenCertificate.sol\":{\"keccak256\":\"0x3870289102c13d688bc7abef9ad8f80227a13d0d84afa80fd358a22933dbb196\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc3eb6f7597c6a7a49099eb3308ce90921e208eae3ffc5f75eb23f093f71f638\",\"dweb:/ipfs/QmU9TtAZwEHunJ6dEeKKXBeqp2FEedKrZrh1wM1qEYLRah\"]},\"project:/contracts/GreenCertificateRepository.sol\":{\"keccak256\":\"0x6844fc7a96d0676fa29db1d11950ad6001fe6426a4368a9d363bdf855fa873ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f5fd1c08552dfe02a875efe23c44c5bd48efa4353f11e1540292544cf05bf72\",\"dweb:/ipfs/QmRMwefJGyBb4WpTxZMBifCU4G6xe6KsrNzVZp8cwu3U9E\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000695760003560e01c8062896eee146200006e57806342b828b3146200008e578063620feee314620000c4578063893d20e814620000fa5780639c0d15fb146200011c578063cb35e1e61462000152575b600080fd5b6200008c600480360381019062000086919062000a36565b62000188565b005b620000ac6004803603810190620000a6919062000a0a565b6200049c565b604051620000bb919062000ccf565b60405180910390f35b620000e26004803603810190620000dc919062000a36565b620005d8565b604051620000f1919062000cf3565b60405180910390f35b6200010462000723565b60405162000113919062000c7e565b60405180910390f35b6200013a600480360381019062000134919062000a0a565b6200074c565b60405162000149919062000c7e565b60405180910390f35b6200017060048036038101906200016a919062000a0a565b62000802565b6040516200017f919062000cf3565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614620001e157600080fd5b60001515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141562000389576000826040516200024c9062000858565b62000258919062000c7e565b604051809103906000f08015801562000275573d6000803e3d6000fd5b5090506001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd74aba97929f9c483acd3c361751a46ee8ef31b85336dec91f503d695dab6df1816040516200037f919062000c7e565b60405180910390a1505b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16630ed047d4836040518263ffffffff1660e01b815260040162000428919062000d10565b600060405180830381600087803b1580156200044357600080fd5b505af115801562000458573d6000803e3d6000fd5b505050507f7290139a1d883a1284fc3550b1ca8c453f0520aa22089656d30587b014cb69fb83836040516200048f92919062000c9b565b60405180910390a1505050565b6060620004a98262000802565b620004eb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004e29062000d34565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcc601286040518163ffffffff1660e01b815260040160006040518083038186803b1580156200059157600080fd5b505afa158015620005a6573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190620005d1919062000a90565b9050919050565b6000620005e58362000802565b62000627576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200061e9062000d34565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663ffa67370846040518263ffffffff1660e01b8152600401620006c6919062000d10565b60206040518083038186803b158015620006df57600080fd5b505afa158015620006f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200071a919062000ad5565b91505092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000620007598262000802565b6200079b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620007929062000d34565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6109538062000f4c83390190565b60006200087d620008778462000d8a565b62000d56565b9050808382526020820190508260005b85811015620008c15781518501620008a68882620009dd565b8452602084019350602083019250506001810190506200088d565b5050509392505050565b6000620008e2620008dc8462000db9565b62000d56565b905082815260208101848484011115620008fb57600080fd5b6200090884828562000e92565b509392505050565b600062000927620009218462000db9565b62000d56565b9050828152602081018484840111156200094057600080fd5b6200094d84828562000ea1565b509392505050565b600081359050620009668162000f17565b92915050565b600082601f8301126200097e57600080fd5b81516200099084826020860162000866565b91505092915050565b600081519050620009aa8162000f31565b92915050565b600082601f830112620009c257600080fd5b8135620009d4848260208601620008cb565b91505092915050565b600082601f830112620009ef57600080fd5b815162000a0184826020860162000910565b91505092915050565b60006020828403121562000a1d57600080fd5b600062000a2d8482850162000955565b91505092915050565b6000806040838503121562000a4a57600080fd5b600062000a5a8582860162000955565b925050602083013567ffffffffffffffff81111562000a7857600080fd5b62000a8685828601620009b0565b9150509250929050565b60006020828403121562000aa357600080fd5b600082015167ffffffffffffffff81111562000abe57600080fd5b62000acc848285016200096c565b91505092915050565b60006020828403121562000ae857600080fd5b600062000af88482850162000999565b91505092915050565b600062000b0f838362000bba565b905092915050565b62000b228162000e52565b82525050565b600062000b358262000dfc565b62000b41818562000e1f565b93508360208202850162000b558562000dec565b8060005b8581101562000b97578484038952815162000b75858262000b01565b945062000b828362000e12565b925060208a0199505060018101905062000b59565b50829750879550505050505092915050565b62000bb48162000e66565b82525050565b600062000bc78262000e07565b62000bd3818562000e30565b935062000be581856020860162000ea1565b62000bf08162000f06565b840191505092915050565b600062000c088262000e07565b62000c14818562000e41565b935062000c2681856020860162000ea1565b62000c318162000f06565b840191505092915050565b600062000c4b601e8362000e41565b91507f476976656e20636f6d70616e79206973206e6f742063657274696669656400006000830152602082019050919050565b600060208201905062000c95600083018462000b17565b92915050565b600060408201905062000cb2600083018562000b17565b818103602083015262000cc6818462000bfb565b90509392505050565b6000602082019050818103600083015262000ceb818462000b28565b905092915050565b600060208201905062000d0a600083018462000ba9565b92915050565b6000602082019050818103600083015262000d2c818462000bfb565b905092915050565b6000602082019050818103600083015262000d4f8162000c3c565b9050919050565b6000604051905081810181811067ffffffffffffffff8211171562000d805762000d7f62000ed7565b5b8060405250919050565b600067ffffffffffffffff82111562000da85762000da762000ed7565b5b602082029050602081019050919050565b600067ffffffffffffffff82111562000dd75762000dd662000ed7565b5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600062000e5f8262000e72565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101562000ec157808201518184015260208101905062000ea4565b8381111562000ed1576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b62000f228162000e52565b811462000f2e57600080fd5b50565b62000f3c8162000e66565b811462000f4857600080fd5b5056fe608060405234801561001057600080fd5b50604051610953380380610953833981810160405281019061003291906100ce565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100c881610129565b92915050565b6000602082840312156100e057600080fd5b60006100ee848285016100b9565b91505092915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610132816100f7565b811461013d57600080fd5b50565b6108048061014f6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630ed047d41461005c578063127810bc14610078578063893d20e814610096578063dcc60128146100b4578063ffa67370146100d2575b600080fd5b6100766004803603810190610071919061045f565b610102565b005b61008061020e565b60405161008d91906105ef565b60405180910390f35b61009e610238565b6040516100ab91906105ef565b60405180910390f35b6100bc610261565b6040516100c9919061060a565b60405180910390f35b6100ec60048036038101906100e7919061045f565b61033a565b6040516100f9919061062c565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015a57600080fd5b60016003838360405161016e9291906105d6565b908152602001604051809103902060006101000a81548160ff02191690831515021790555060028282909180600181540180825580915050600190039060005260206000200160009091929091929091929091925091906101d0929190610372565b507fe2113e2f31e9059e4f64d1910b874f2e8ee4a4fd9081c4910d409f649dfe3b488282604051610202929190610647565b60405180910390a15050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156103315783829060005260206000200180546102a49061075c565b80601f01602080910402602001604051908101604052809291908181526020018280546102d09061075c565b801561031d5780601f106102f25761010080835404028352916020019161031d565b820191906000526020600020905b81548152906001019060200180831161030057829003601f168201915b505050505081526020019060010190610285565b50505050905090565b60006003838360405161034e9291906105d6565b908152602001604051809103902060009054906101000a900460ff16905092915050565b82805461037e9061075c565b90600052602060002090601f0160209004810192826103a057600085556103e7565b82601f106103b957803560ff19168380011785556103e7565b828001600101855582156103e7579182015b828111156103e65782358255916020019190600101906103cb565b5b5090506103f491906103f8565b5090565b5b808211156104115760008160009055506001016103f9565b5090565b60008083601f84011261042757600080fd5b8235905067ffffffffffffffff81111561044057600080fd5b60208301915083600182028301111561045857600080fd5b9250929050565b6000806020838503121561047257600080fd5b600083013567ffffffffffffffff81111561048c57600080fd5b61049885828601610415565b92509250509250929050565b60006104b0838361059d565b905092915050565b6104c1816106dc565b82525050565b60006104d28261067b565b6104dc818561069e565b9350836020820285016104ee8561066b565b8060005b8581101561052a578484038952815161050b85826104a4565b945061051683610691565b925060208a019950506001810190506104f2565b50829750879550505050505092915050565b610545816106ee565b82525050565b600061055783856106c0565b935061056483858461071a565b61056d836107bd565b840190509392505050565b600061058483856106d1565b935061059183858461071a565b82840190509392505050565b60006105a882610686565b6105b281856106af565b93506105c2818560208601610729565b6105cb816107bd565b840191505092915050565b60006105e3828486610578565b91508190509392505050565b600060208201905061060460008301846104b8565b92915050565b6000602082019050818103600083015261062481846104c7565b905092915050565b6000602082019050610641600083018461053c565b92915050565b6000602082019050818103600083015261066281848661054b565b90509392505050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b60006106e7826106fa565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b8381101561074757808201518184015260208101905061072c565b83811115610756576000848401525b50505050565b6000600282049050600182168061077457607f821691505b602082108114156107885761078761078e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f830116905091905056fea26469706673582212209508e73465c6667cd2b4e668711393aac30c4e58bb711c8015ca45a8b95dbd1c64736f6c63430008000033a264697066735822122001a18b3a776015d69b9ccb7ae59874166b305693d59b68bec644b2b99bc7eedd64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:12047:22",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "146:507:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "156:99:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "247:6:22"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "180:66:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "180:74:22"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "165:14:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:90:22"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "156:5:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "264:16:22",
                  "value": {
                    "name": "array",
                    "nodeType": "YulIdentifier",
                    "src": "275:5:22"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "268:3:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "296:5:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "303:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "289:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "289:21:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "289:21:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "311:23:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "322:5:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "329:4:22",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "318:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "318:16:22"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "311:3:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "343:17:22",
                  "value": {
                    "name": "offset",
                    "nodeType": "YulIdentifier",
                    "src": "354:6:22"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "347:3:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "430:217:22",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "444:41:22",
                        "value": {
                          "arguments": [
                            {
                              "name": "offset",
                              "nodeType": "YulIdentifier",
                              "src": "466:6:22"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "480:3:22"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "474:5:22"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "474:10:22"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "462:3:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "462:23:22"
                        },
                        "variables": [
                          {
                            "name": "elementPos",
                            "nodeType": "YulTypedName",
                            "src": "448:10:22",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "505:3:22"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "elementPos",
                                  "nodeType": "YulIdentifier",
                                  "src": "552:10:22"
                                },
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "564:3:22"
                                }
                              ],
                              "functionName": {
                                "name": "abi_decode_t_string_memory_ptr_fromMemory",
                                "nodeType": "YulIdentifier",
                                "src": "510:41:22"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "510:58:22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "498:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "498:71:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "498:71:22"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "582:21:22",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "593:3:22"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "598:4:22",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "589:3:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "589:14:22"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "582:3:22"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "616:21:22",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "627:3:22"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "632:4:22",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "623:3:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "623:14:22"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "616:3:22"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "392:1:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "395:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "389:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "389:13:22"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "403:18:22",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "405:14:22",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "414:1:22"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "417:1:22",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "410:3:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "410:9:22"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "405:1:22"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "374:14:22",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "376:10:22",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "385:1:22",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "380:1:22",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "370:277:22"
                }
              ]
            },
            "name": "abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "116:6:22",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "124:6:22",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "132:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "140:5:22",
                "type": ""
              }
            ],
            "src": "23:630:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "743:260:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "753:74:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "819:6:22"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "777:41:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "777:49:22"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "762:14:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "762:65:22"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "753:5:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "843:5:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "850:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "836:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "836:21:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "836:21:22"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "866:27:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "881:5:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "888:4:22",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "877:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "877:16:22"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "870:3:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "931:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "940:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "943:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "933:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "933:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "933:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "912:3:22"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "917:6:22"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "908:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "908:16:22"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "926:3:22"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "905:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "905:25:22"
                  },
                  "nodeType": "YulIf",
                  "src": "902:2:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "980:3:22"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "985:3:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "990:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "956:23:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "956:41:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "956:41:22"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "716:3:22",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "721:6:22",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "729:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "737:5:22",
                "type": ""
              }
            ],
            "src": "659:344:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1104:258:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:74:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1180:6:22"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1138:41:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1138:49:22"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1123:14:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:65:22"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1114:5:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "1204:5:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1211:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1197:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1197:21:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1197:21:22"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1227:27:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "1242:5:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1249:4:22",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1238:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1238:16:22"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "1231:3:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1292:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1301:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1304:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1294:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1294:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1294:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "1273:3:22"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1278:6:22"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1269:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1269:16:22"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1287:3:22"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1266:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1266:25:22"
                  },
                  "nodeType": "YulIf",
                  "src": "1263:2:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "1339:3:22"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "1344:3:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1349:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1317:21:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1317:39:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1317:39:22"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1077:3:22",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1082:6:22",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1090:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1098:5:22",
                "type": ""
              }
            ],
            "src": "1009:353:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1420:87:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1430:29:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1452:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1439:12:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1439:20:22"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1430:5:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1495:5:22"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1468:26:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1468:33:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1468:33:22"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1398:6:22",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1406:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1414:5:22",
                "type": ""
              }
            ],
            "src": "1368:139:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1627:240:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1676:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1685:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1688:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1678:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1678:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1678:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1655:6:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1663:4:22",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1651:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1651:17:22"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1670:3:22"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1647:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1647:27:22"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1640:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1640:35:22"
                  },
                  "nodeType": "YulIf",
                  "src": "1637:2:22"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1701:27:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1721:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1715:5:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1715:13:22"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1705:6:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1737:124:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1834:6:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1842:4:22",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1830:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1830:17:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1849:6:22"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1857:3:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "1746:83:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1746:115:22"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1737:5:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1605:6:22",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1613:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "1621:5:22",
                "type": ""
              }
            ],
            "src": "1529:338:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1933:77:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1943:22:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1958:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1952:5:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1952:13:22"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1943:5:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1998:5:22"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "1974:23:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1974:30:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1974:30:22"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1911:6:22",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1919:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1927:5:22",
                "type": ""
              }
            ],
            "src": "1873:137:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2092:211:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2141:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2150:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2153:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2143:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2143:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2143:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2120:6:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2128:4:22",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2116:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2116:17:22"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2135:3:22"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2112:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2112:27:22"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2105:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:35:22"
                  },
                  "nodeType": "YulIf",
                  "src": "2102:2:22"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2166:34:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2193:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2180:12:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2180:20:22"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2170:6:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2209:88:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2270:6:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2278:4:22",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2266:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2266:17:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2285:6:22"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2293:3:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2218:47:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2218:79:22"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2209:5:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2070:6:22",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2078:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2086:5:22",
                "type": ""
              }
            ],
            "src": "2030:273:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2396:215:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2445:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2454:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2457:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2447:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2447:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2447:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2424:6:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2432:4:22",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2420:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2420:17:22"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2439:3:22"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2416:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2416:27:22"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2409:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2409:35:22"
                  },
                  "nodeType": "YulIf",
                  "src": "2406:2:22"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2470:27:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2490:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2484:5:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:13:22"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2474:6:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2506:99:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2578:6:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2586:4:22",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2574:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2574:17:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2593:6:22"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2601:3:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "2515:58:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2515:90:22"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2506:5:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2374:6:22",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2382:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2390:5:22",
                "type": ""
              }
            ],
            "src": "2323:288:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2683:196:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2729:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2738:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2741:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2731:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2731:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2731:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2704:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2713:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2700:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2700:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2725:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2696:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2696:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "2693:2:22"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2755:117:22",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2770:15:22",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2784:1:22",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2774:6:22",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2799:63:22",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2834:9:22"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2845:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2830:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2830:22:22"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2854:7:22"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2809:20:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2809:53:22"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2799:6:22"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2653:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2664:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2676:6:22",
                "type": ""
              }
            ],
            "src": "2617:262:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2978:427:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3024:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3033:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3036:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3026:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3026:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3026:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2999:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3008:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2995:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2995:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3020:2:22",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2991:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2991:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "2988:2:22"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3050:117:22",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3065:15:22",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3079:1:22",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3069:6:22",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3094:63:22",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3129:9:22"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3140:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3125:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3125:22:22"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3149:7:22"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3104:20:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3104:53:22"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3094:6:22"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3177:221:22",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3192:46:22",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3223:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3234:2:22",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3219:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3219:18:22"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3206:12:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3206:32:22"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3196:6:22",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3285:16:22",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3294:1:22",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3297:1:22",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3287:6:22"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3287:12:22"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3287:12:22"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3257:6:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3265:18:22",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3254:2:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3254:30:22"
                      },
                      "nodeType": "YulIf",
                      "src": "3251:2:22"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3315:73:22",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3360:9:22"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3371:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3356:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3356:22:22"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3380:7:22"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3325:30:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3325:63:22"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3315:6:22"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2940:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2951:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2963:6:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2971:6:22",
                "type": ""
              }
            ],
            "src": "2885:520:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3523:328:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3569:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3578:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3581:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3571:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3571:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3571:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3544:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3553:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3540:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3540:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3565:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3536:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3536:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "3533:2:22"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3595:249:22",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3610:38:22",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3634:9:22"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3645:1:22",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3630:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3630:17:22"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3624:5:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3624:24:22"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3614:6:22",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3695:16:22",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3704:1:22",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3707:1:22",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3697:6:22"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3697:12:22"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3697:12:22"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3667:6:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3675:18:22",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3664:2:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3664:30:22"
                      },
                      "nodeType": "YulIf",
                      "src": "3661:2:22"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3725:109:22",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3806:9:22"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3817:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3802:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3802:22:22"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3826:7:22"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3735:66:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3735:99:22"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3725:6:22"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3493:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3504:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3516:6:22",
                "type": ""
              }
            ],
            "src": "3411:440:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3931:204:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3977:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3986:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3989:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3979:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3979:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3979:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3952:7:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3961:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3948:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3948:23:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3973:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3944:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3944:32:22"
                  },
                  "nodeType": "YulIf",
                  "src": "3941:2:22"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4003:125:22",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4018:15:22",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4032:1:22",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4022:6:22",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4047:71:22",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4090:9:22"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4101:6:22"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4086:3:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4086:22:22"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4110:7:22"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "4057:28:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4057:61:22"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4047:6:22"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3901:9:22",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3912:7:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3924:6:22",
                "type": ""
              }
            ],
            "src": "3857:278:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4241:96:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4251:80:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4319:6:22"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4327:3:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4265:53:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4265:66:22"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "4251:10:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4214:6:22",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4222:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "4230:10:22",
                "type": ""
              }
            ],
            "src": "4141:196:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4408:53:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4425:3:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4448:5:22"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4430:17:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4430:24:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4418:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4418:37:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4418:37:22"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4396:5:22",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4403:3:22",
                "type": ""
              }
            ],
            "src": "4343:118:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4639:847:22",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4649:78:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4721:5:22"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4663:57:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4663:64:22"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4653:6:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4736:103:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4827:3:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4832:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4743:83:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4743:96:22"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "4736:3:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4848:20:22",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4865:3:22"
                  },
                  "variables": [
                    {
                      "name": "headStart",
                      "nodeType": "YulTypedName",
                      "src": "4852:9:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4877:39:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4893:3:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4902:6:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4910:4:22",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "4898:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4898:17:22"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4889:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4889:27:22"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "4881:4:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4925:81:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5000:5:22"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "4940:59:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4940:66:22"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "4929:7:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5015:21:22",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "5029:7:22"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5019:6:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5105:336:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5126:3:22"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5135:4:22"
                                },
                                {
                                  "name": "headStart",
                                  "nodeType": "YulIdentifier",
                                  "src": "5141:9:22"
                                }
                              ],
                              "functionName": {
                                "name": "sub",
                                "nodeType": "YulIdentifier",
                                "src": "5131:3:22"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5131:20:22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5119:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5119:33:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5119:33:22"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5165:34:22",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5192:6:22"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5186:5:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5186:13:22"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "5169:13:22",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5212:92:22",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "5284:13:22"
                            },
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5299:4:22"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5220:63:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5220:84:22"
                        },
                        "variableNames": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5212:4:22"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5317:80:22",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5390:6:22"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "5327:62:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5327:70:22"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5317:6:22"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5410:21:22",
                        "value": {
                          "arguments": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "5421:3:22"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5426:4:22",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5417:3:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5417:14:22"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5410:3:22"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5067:1:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5070:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5064:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5064:13:22"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5078:18:22",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5080:14:22",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5089:1:22"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5092:1:22",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5085:3:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5085:9:22"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5080:1:22"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5049:14:22",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5051:10:22",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5060:1:22",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "5055:1:22",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "5045:396:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5450:11:22",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "5457:4:22"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5450:3:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5470:10:22",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5477:3:22"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5470:3:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4618:5:22",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4625:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4634:3:22",
                "type": ""
              }
            ],
            "src": "4495:991:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5551:50:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5568:3:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5588:5:22"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5573:14:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5573:21:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5561:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5561:34:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5561:34:22"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5539:5:22",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5546:3:22",
                "type": ""
              }
            ],
            "src": "5492:109:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5689:262:22",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5699:53:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5746:5:22"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5713:32:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5713:39:22"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5703:6:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5761:68:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5817:3:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5822:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5768:48:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5768:61:22"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5761:3:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5864:5:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5871:4:22",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5860:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5860:16:22"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5878:3:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5883:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "5838:21:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5838:52:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5838:52:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5899:46:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5910:3:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5937:6:22"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "5915:21:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5915:29:22"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5906:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5906:39:22"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5899:3:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5670:5:22",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5677:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5685:3:22",
                "type": ""
              }
            ],
            "src": "5607:344:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6049:272:22",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6059:53:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6106:5:22"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "6073:32:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6073:39:22"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6063:6:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6121:78:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6187:3:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6192:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6128:58:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6128:71:22"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6121:3:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6234:5:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6241:4:22",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6230:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6230:16:22"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6248:3:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6253:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6208:21:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6208:52:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6208:52:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6269:46:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6280:3:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6307:6:22"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "6285:21:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6285:29:22"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6276:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6276:39:22"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6269:3:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6030:5:22",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6037:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6045:3:22",
                "type": ""
              }
            ],
            "src": "5957:364:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6473:182:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6483:74:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6549:3:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6554:2:22",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6490:58:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6490:67:22"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6483:3:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6578:3:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6583:1:22",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6574:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6574:11:22"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6587:32:22",
                        "type": "",
                        "value": "Given company is not certified"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6567:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6567:53:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6567:53:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6630:19:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6641:3:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6646:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6637:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6637:12:22"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6630:3:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6461:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6469:3:22",
                "type": ""
              }
            ],
            "src": "6327:328:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6759:124:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6769:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6781:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6792:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6777:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6777:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6769:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6849:6:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6862:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6873:1:22",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6858:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6858:17:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6805:43:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6805:71:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6805:71:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6731:9:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6743:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6754:4:22",
                "type": ""
              }
            ],
            "src": "6661:222:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7035:277:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7045:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7057:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7068:2:22",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7053:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7053:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7045:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7125:6:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7138:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7149:1:22",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7134:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7134:17:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7081:43:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7081:71:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7081:71:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7173:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7184:2:22",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7169:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7169:18:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7193:4:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7199:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7189:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7189:20:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7162:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7162:48:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7162:48:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7219:86:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7291:6:22"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7300:4:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7227:63:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7227:78:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7219:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6999:9:22",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7011:6:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7019:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7030:4:22",
                "type": ""
              }
            ],
            "src": "6889:423:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7486:245:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7496:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7508:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7519:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7504:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7504:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7496:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7543:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7554:1:22",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7539:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7539:17:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7562:4:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7568:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7558:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7558:20:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7532:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7532:47:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7532:47:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7588:136:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7710:6:22"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7719:4:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7596:113:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7596:128:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7588:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7458:9:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7470:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7481:4:22",
                "type": ""
              }
            ],
            "src": "7318:413:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7829:118:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7839:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7851:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7862:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7847:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7847:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7839:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7913:6:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7926:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7937:1:22",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7922:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7922:17:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7875:37:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7875:65:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7875:65:22"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7801:9:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7813:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7824:4:22",
                "type": ""
              }
            ],
            "src": "7737:210:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8071:195:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8081:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8093:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8104:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8089:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8089:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8081:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8128:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8139:1:22",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8124:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8124:17:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8147:4:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8153:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8143:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8143:20:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8117:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8117:47:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8117:47:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8173:86:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8245:6:22"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8254:4:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8181:63:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8181:78:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8173:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8043:9:22",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8055:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8066:4:22",
                "type": ""
              }
            ],
            "src": "7953:313:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8443:248:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8453:26:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8465:9:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8476:2:22",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8461:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8461:18:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8453:4:22"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8500:9:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8511:1:22",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8496:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8496:17:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8519:4:22"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8525:9:22"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8515:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8515:20:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8489:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8489:47:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8489:47:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8545:139:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8679:4:22"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8553:124:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8553:131:22"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8545:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8423:9:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8438:4:22",
                "type": ""
              }
            ],
            "src": "8272:419:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8737:243:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8747:19:22",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8763:2:22",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8757:5:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8757:9:22"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "8747:6:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8775:35:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "8797:6:22"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "8805:4:22"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8793:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8793:17:22"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "8779:10:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8921:22:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "8923:16:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8923:18:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8923:18:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8864:10:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8876:18:22",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8861:2:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8861:34:22"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "8900:10:22"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8912:6:22"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "8897:2:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8897:22:22"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "8858:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8858:62:22"
                  },
                  "nodeType": "YulIf",
                  "src": "8855:2:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8959:2:22",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "8963:10:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8952:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8952:22:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8952:22:22"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "8721:4:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8730:6:22",
                "type": ""
              }
            ],
            "src": "8697:283:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9078:229:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9183:22:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "9185:16:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9185:18:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9185:18:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9155:6:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9163:18:22",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9152:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9152:30:22"
                  },
                  "nodeType": "YulIf",
                  "src": "9149:2:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9215:25:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9227:6:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9235:4:22",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "9223:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9223:17:22"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "9215:4:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9277:23:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "9289:4:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9295:4:22",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9285:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9285:15:22"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "9277:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9062:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "9073:4:22",
                "type": ""
              }
            ],
            "src": "8986:321:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9380:265:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9485:22:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "9487:16:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9487:18:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9487:18:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9457:6:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9465:18:22",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9454:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9454:30:22"
                  },
                  "nodeType": "YulIf",
                  "src": "9451:2:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9537:41:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9553:6:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9561:4:22",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9549:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9549:17:22"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9572:4:22",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "9568:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9568:9:22"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9545:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9545:33:22"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "9537:4:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9615:23:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "9627:4:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9633:4:22",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9623:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9623:15:22"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "9615:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9364:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "9375:4:22",
                "type": ""
              }
            ],
            "src": "9313:332:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9733:60:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9743:11:22",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "9751:3:22"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "9743:4:22"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9764:22:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "9776:3:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9781:4:22",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9772:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9772:14:22"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "9764:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "9720:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "9728:4:22",
                "type": ""
              }
            ],
            "src": "9651:142:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9883:40:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9894:22:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9910:5:22"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9904:5:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9904:12:22"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9894:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9866:5:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9876:6:22",
                "type": ""
              }
            ],
            "src": "9799:124:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9988:40:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9999:22:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10015:5:22"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10009:5:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10009:12:22"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "9999:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9971:5:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9981:6:22",
                "type": ""
              }
            ],
            "src": "9929:99:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10119:38:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10129:22:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "10141:3:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10146:4:22",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10137:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10137:14:22"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "10129:4:22"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "10106:3:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "10114:4:22",
                "type": ""
              }
            ],
            "src": "10034:123:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10284:73:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10301:3:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10306:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10294:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10294:19:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10294:19:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10322:29:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10341:3:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10346:4:22",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10337:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10337:14:22"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10322:11:22"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10256:3:22",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10261:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10272:11:22",
                "type": ""
              }
            ],
            "src": "10163:194:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10449:73:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10466:3:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10471:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10459:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10459:19:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10459:19:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10487:29:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10506:3:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10511:4:22",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10502:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10502:14:22"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10487:11:22"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10421:3:22",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10426:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10437:11:22",
                "type": ""
              }
            ],
            "src": "10363:159:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10624:73:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10641:3:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10646:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10634:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10634:19:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10634:19:22"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10662:29:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10681:3:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10686:4:22",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10677:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10677:14:22"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10662:11:22"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10596:3:22",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10601:6:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10612:11:22",
                "type": ""
              }
            ],
            "src": "10528:169:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10748:51:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10758:35:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10787:5:22"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "10769:17:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10769:24:22"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10758:7:22"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10730:5:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10740:7:22",
                "type": ""
              }
            ],
            "src": "10703:96:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10847:48:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10857:32:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10882:5:22"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "10875:6:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10875:13:22"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10868:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10868:21:22"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10857:7:22"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10829:5:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10839:7:22",
                "type": ""
              }
            ],
            "src": "10805:90:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10946:81:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10956:65:22",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10971:5:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10978:42:22",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10967:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10967:54:22"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "10956:7:22"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10928:5:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "10938:7:22",
                "type": ""
              }
            ],
            "src": "10901:126:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11084:103:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "11107:3:22"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "11112:3:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11117:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "11094:12:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11094:30:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11094:30:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "11165:3:22"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "11170:6:22"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11161:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11161:16:22"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11179:1:22",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11154:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11154:27:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11154:27:22"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "11066:3:22",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "11071:3:22",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11076:6:22",
                "type": ""
              }
            ],
            "src": "11033:154:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11242:258:22",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11252:10:22",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "11261:1:22",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "11256:1:22",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11321:63:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11346:3:22"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "11351:1:22"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11342:3:22"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11342:11:22"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "11365:3:22"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "11370:1:22"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "11361:3:22"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11361:11:22"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "11355:5:22"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11355:18:22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11335:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11335:39:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11335:39:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11282:1:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11285:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "11279:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11279:13:22"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "11293:19:22",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "11295:15:22",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "11304:1:22"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11307:2:22",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "11300:3:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11300:10:22"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "11295:1:22"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "11275:3:22",
                    "statements": []
                  },
                  "src": "11271:113:22"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11418:76:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "11468:3:22"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "11473:6:22"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "11464:3:22"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "11464:16:22"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11482:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "11457:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11457:27:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11457:27:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "11399:1:22"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "11402:6:22"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11396:2:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11396:13:22"
                  },
                  "nodeType": "YulIf",
                  "src": "11393:2:22"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "11224:3:22",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "11229:3:22",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "11234:6:22",
                "type": ""
              }
            ],
            "src": "11193:307:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11534:152:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11551:1:22",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11554:77:22",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11544:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11544:88:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11544:88:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11648:1:22",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11651:4:22",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11641:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11641:15:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11641:15:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11672:1:22",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11675:4:22",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11665:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11665:15:22"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11665:15:22"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "11506:180:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11740:54:22",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11750:38:22",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11768:5:22"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11775:2:22",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11764:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11764:14:22"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11784:2:22",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "11780:3:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11780:7:22"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11760:3:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11760:28:22"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "11750:6:22"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11723:5:22",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "11733:6:22",
                "type": ""
              }
            ],
            "src": "11692:102:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11843:79:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11900:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11909:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11912:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11902:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11902:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11902:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11866:5:22"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11891:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "11873:17:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11873:24:22"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11863:2:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11863:35:22"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11856:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11856:43:22"
                  },
                  "nodeType": "YulIf",
                  "src": "11853:2:22"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11836:5:22",
                "type": ""
              }
            ],
            "src": "11800:122:22"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11968:76:22",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "12022:16:22",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12031:1:22",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12034:1:22",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "12024:6:22"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "12024:12:22"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "12024:12:22"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11991:5:22"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12013:5:22"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "11998:14:22"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11998:21:22"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11988:2:22"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11988:32:22"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11981:6:22"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11981:40:22"
                  },
                  "nodeType": "YulIf",
                  "src": "11978:2:22"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11961:5:22",
                "type": ""
              }
            ],
            "src": "11928:116:22"
          }
        ]
      },
      "contents": "{\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := add(offset, mload(src))\n            mstore(dst, abi_decode_t_string_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x20)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_string_memory_ptr_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n\n        mstore(add(pos, 0), \"Given company is not certified\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr__to_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_memory_ptr_$dyn_memory_ptr_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_string_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 22,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "144:3572:18:-:0;;;1000:50;;;;;;;;;;1033:10;1024:6;;:19;;;;;;;;;;;;;;;;;;144:3572;;;;;;",
  "deployedSourceMap": "144:3572:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2960:752;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1991:232;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2366:309;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1169:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1604:230;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1329:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2960:752;366:6;;;;;;;;;;352:20;;:10;:20;;;344:29;;;;;;3166:5:::1;3134:37;;:19;:28;3154:7;3134:28;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;3131:367;;;3221:31;3276:7;3255:29;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;3221:63;;3329:4;3298:19;:28;3318:7;3298:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;3377:14;3347:18;:27;3366:7;3347:27;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;3442:45;3471:14;3442:45;;;;;;:::i;:::-;;;;;;;;3131:367;;3544:28;3575:18;:27;3594:7;3575:27;;;;;;;;;;;;;;;;;;;;;;;;;3544:58;;3612:11;:22;;;3635:7;3612:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3661:38;3682:7;3691;3661:38;;;;;;;:::i;:::-;;;;;;;;383:1;2960:752:::0;;:::o;1991:232::-;2061:15;2096:27;2115:7;2096:18;:27::i;:::-;2088:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2175:18;:27;2194:7;2175:27;;;;;;;;;;;;;;;;;;;;;;;;;:39;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2168:48;;1991:232;;;:::o;2366:309::-;2458:4;2482:27;2501:7;2482:18;:27::i;:::-;2474:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2554:28;2585:18;:27;2604:7;2585:27;;;;;;;;;;;;;;;;;;;;;;;;;2554:58;;2629:11;:30;;;2660:7;2629:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2622:46;;;2366:309;;;;:::o;1169:82::-;1212:7;1238:6;;;;;;;;;;;1231:13;;1169:82;:::o;1604:230::-;1680:7;1707:27;1726:7;1707:18;:27::i;:::-;1699:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1794:18;:27;1813:7;1794:27;;;;;;;;;;;;;;;;;;;;;;;;;1779:43;;1604:230;;;:::o;1329:124::-;1395:4;1418:19;:28;1438:7;1418:28;;;;;;;;;;;;;;;;;;;;;;;;;1411:35;;1329:124;;;:::o;-1:-1:-1:-;;;;;;;;:::o;23:630:22:-;;165:90;180:74;247:6;180:74;:::i;:::-;165:90;:::i;:::-;156:99;;275:5;303:6;296:5;289:21;329:4;322:5;318:16;311:23;;354:6;385:1;370:277;395:6;392:1;389:13;370:277;;;480:3;474:10;466:6;462:23;510:58;564:3;552:10;510:58;:::i;:::-;505:3;498:71;598:4;593:3;589:14;582:21;;632:4;627:3;623:14;616:21;;430:217;417:1;414;410:9;405:14;;370:277;;;374:14;146:507;;;;;;;:::o;659:344::-;;762:65;777:49;819:6;777:49;:::i;:::-;762:65;:::i;:::-;753:74;;850:6;843:5;836:21;888:4;881:5;877:16;926:3;917:6;912:3;908:16;905:25;902:2;;;943:1;940;933:12;902:2;956:41;990:6;985:3;980;956:41;:::i;:::-;743:260;;;;;;:::o;1009:353::-;;1123:65;1138:49;1180:6;1138:49;:::i;:::-;1123:65;:::i;:::-;1114:74;;1211:6;1204:5;1197:21;1249:4;1242:5;1238:16;1287:3;1278:6;1273:3;1269:16;1266:25;1263:2;;;1304:1;1301;1294:12;1263:2;1317:39;1349:6;1344:3;1339;1317:39;:::i;:::-;1104:258;;;;;;:::o;1368:139::-;;1452:6;1439:20;1430:29;;1468:33;1495:5;1468:33;:::i;:::-;1420:87;;;;:::o;1529:338::-;;1670:3;1663:4;1655:6;1651:17;1647:27;1637:2;;1688:1;1685;1678:12;1637:2;1721:6;1715:13;1746:115;1857:3;1849:6;1842:4;1834:6;1830:17;1746:115;:::i;:::-;1737:124;;1627:240;;;;;:::o;1873:137::-;;1958:6;1952:13;1943:22;;1974:30;1998:5;1974:30;:::i;:::-;1933:77;;;;:::o;2030:273::-;;2135:3;2128:4;2120:6;2116:17;2112:27;2102:2;;2153:1;2150;2143:12;2102:2;2193:6;2180:20;2218:79;2293:3;2285:6;2278:4;2270:6;2266:17;2218:79;:::i;:::-;2209:88;;2092:211;;;;;:::o;2323:288::-;;2439:3;2432:4;2424:6;2420:17;2416:27;2406:2;;2457:1;2454;2447:12;2406:2;2490:6;2484:13;2515:90;2601:3;2593:6;2586:4;2578:6;2574:17;2515:90;:::i;:::-;2506:99;;2396:215;;;;;:::o;2617:262::-;;2725:2;2713:9;2704:7;2700:23;2696:32;2693:2;;;2741:1;2738;2731:12;2693:2;2784:1;2809:53;2854:7;2845:6;2834:9;2830:22;2809:53;:::i;:::-;2799:63;;2755:117;2683:196;;;;:::o;2885:520::-;;;3020:2;3008:9;2999:7;2995:23;2991:32;2988:2;;;3036:1;3033;3026:12;2988:2;3079:1;3104:53;3149:7;3140:6;3129:9;3125:22;3104:53;:::i;:::-;3094:63;;3050:117;3234:2;3223:9;3219:18;3206:32;3265:18;3257:6;3254:30;3251:2;;;3297:1;3294;3287:12;3251:2;3325:63;3380:7;3371:6;3360:9;3356:22;3325:63;:::i;:::-;3315:73;;3177:221;2978:427;;;;;:::o;3411:440::-;;3565:2;3553:9;3544:7;3540:23;3536:32;3533:2;;;3581:1;3578;3571:12;3533:2;3645:1;3634:9;3630:17;3624:24;3675:18;3667:6;3664:30;3661:2;;;3707:1;3704;3697:12;3661:2;3735:99;3826:7;3817:6;3806:9;3802:22;3735:99;:::i;:::-;3725:109;;3595:249;3523:328;;;;:::o;3857:278::-;;3973:2;3961:9;3952:7;3948:23;3944:32;3941:2;;;3989:1;3986;3979:12;3941:2;4032:1;4057:61;4110:7;4101:6;4090:9;4086:22;4057:61;:::i;:::-;4047:71;;4003:125;3931:204;;;;:::o;4141:196::-;;4265:66;4327:3;4319:6;4265:66;:::i;:::-;4251:80;;4241:96;;;;:::o;4343:118::-;4430:24;4448:5;4430:24;:::i;:::-;4425:3;4418:37;4408:53;;:::o;4495:991::-;;4663:64;4721:5;4663:64;:::i;:::-;4743:96;4832:6;4827:3;4743:96;:::i;:::-;4736:103;;4865:3;4910:4;4902:6;4898:17;4893:3;4889:27;4940:66;5000:5;4940:66;:::i;:::-;5029:7;5060:1;5045:396;5070:6;5067:1;5064:13;5045:396;;;5141:9;5135:4;5131:20;5126:3;5119:33;5192:6;5186:13;5220:84;5299:4;5284:13;5220:84;:::i;:::-;5212:92;;5327:70;5390:6;5327:70;:::i;:::-;5317:80;;5426:4;5421:3;5417:14;5410:21;;5105:336;5092:1;5089;5085:9;5080:14;;5045:396;;;5049:14;5457:4;5450:11;;5477:3;5470:10;;4639:847;;;;;;;;;:::o;5492:109::-;5573:21;5588:5;5573:21;:::i;:::-;5568:3;5561:34;5551:50;;:::o;5607:344::-;;5713:39;5746:5;5713:39;:::i;:::-;5768:61;5822:6;5817:3;5768:61;:::i;:::-;5761:68;;5838:52;5883:6;5878:3;5871:4;5864:5;5860:16;5838:52;:::i;:::-;5915:29;5937:6;5915:29;:::i;:::-;5910:3;5906:39;5899:46;;5689:262;;;;;:::o;5957:364::-;;6073:39;6106:5;6073:39;:::i;:::-;6128:71;6192:6;6187:3;6128:71;:::i;:::-;6121:78;;6208:52;6253:6;6248:3;6241:4;6234:5;6230:16;6208:52;:::i;:::-;6285:29;6307:6;6285:29;:::i;:::-;6280:3;6276:39;6269:46;;6049:272;;;;;:::o;6327:328::-;;6490:67;6554:2;6549:3;6490:67;:::i;:::-;6483:74;;6587:32;6583:1;6578:3;6574:11;6567:53;6646:2;6641:3;6637:12;6630:19;;6473:182;;;:::o;6661:222::-;;6792:2;6781:9;6777:18;6769:26;;6805:71;6873:1;6862:9;6858:17;6849:6;6805:71;:::i;:::-;6759:124;;;;:::o;6889:423::-;;7068:2;7057:9;7053:18;7045:26;;7081:71;7149:1;7138:9;7134:17;7125:6;7081:71;:::i;:::-;7199:9;7193:4;7189:20;7184:2;7173:9;7169:18;7162:48;7227:78;7300:4;7291:6;7227:78;:::i;:::-;7219:86;;7035:277;;;;;:::o;7318:413::-;;7519:2;7508:9;7504:18;7496:26;;7568:9;7562:4;7558:20;7554:1;7543:9;7539:17;7532:47;7596:128;7719:4;7710:6;7596:128;:::i;:::-;7588:136;;7486:245;;;;:::o;7737:210::-;;7862:2;7851:9;7847:18;7839:26;;7875:65;7937:1;7926:9;7922:17;7913:6;7875:65;:::i;:::-;7829:118;;;;:::o;7953:313::-;;8104:2;8093:9;8089:18;8081:26;;8153:9;8147:4;8143:20;8139:1;8128:9;8124:17;8117:47;8181:78;8254:4;8245:6;8181:78;:::i;:::-;8173:86;;8071:195;;;;:::o;8272:419::-;;8476:2;8465:9;8461:18;8453:26;;8525:9;8519:4;8515:20;8511:1;8500:9;8496:17;8489:47;8553:131;8679:4;8553:131;:::i;:::-;8545:139;;8443:248;;;:::o;8697:283::-;;8763:2;8757:9;8747:19;;8805:4;8797:6;8793:17;8912:6;8900:10;8897:22;8876:18;8864:10;8861:34;8858:62;8855:2;;;8923:18;;:::i;:::-;8855:2;8963:10;8959:2;8952:22;8737:243;;;;:::o;8986:321::-;;9163:18;9155:6;9152:30;9149:2;;;9185:18;;:::i;:::-;9149:2;9235:4;9227:6;9223:17;9215:25;;9295:4;9289;9285:15;9277:23;;9078:229;;;:::o;9313:332::-;;9465:18;9457:6;9454:30;9451:2;;;9487:18;;:::i;:::-;9451:2;9572:4;9568:9;9561:4;9553:6;9549:17;9545:33;9537:41;;9633:4;9627;9623:15;9615:23;;9380:265;;;:::o;9651:142::-;;9751:3;9743:11;;9781:4;9776:3;9772:14;9764:22;;9733:60;;;:::o;9799:124::-;;9910:5;9904:12;9894:22;;9883:40;;;:::o;9929:99::-;;10015:5;10009:12;9999:22;;9988:40;;;:::o;10034:123::-;;10146:4;10141:3;10137:14;10129:22;;10119:38;;;:::o;10163:194::-;;10306:6;10301:3;10294:19;10346:4;10341:3;10337:14;10322:29;;10284:73;;;;:::o;10363:159::-;;10471:6;10466:3;10459:19;10511:4;10506:3;10502:14;10487:29;;10449:73;;;;:::o;10528:169::-;;10646:6;10641:3;10634:19;10686:4;10681:3;10677:14;10662:29;;10624:73;;;;:::o;10703:96::-;;10769:24;10787:5;10769:24;:::i;:::-;10758:35;;10748:51;;;:::o;10805:90::-;;10882:5;10875:13;10868:21;10857:32;;10847:48;;;:::o;10901:126::-;;10978:42;10971:5;10967:54;10956:65;;10946:81;;;:::o;11033:154::-;11117:6;11112:3;11107;11094:30;11179:1;11170:6;11165:3;11161:16;11154:27;11084:103;;;:::o;11193:307::-;11261:1;11271:113;11285:6;11282:1;11279:13;11271:113;;;11370:1;11365:3;11361:11;11355:18;11351:1;11346:3;11342:11;11335:39;11307:2;11304:1;11300:10;11295:15;;11271:113;;;11402:6;11399:1;11396:13;11393:2;;;11482:1;11473:6;11468:3;11464:16;11457:27;11393:2;11242:258;;;;:::o;11506:180::-;11554:77;11551:1;11544:88;11651:4;11648:1;11641:15;11675:4;11672:1;11665:15;11692:102;;11784:2;11780:7;11775:2;11768:5;11764:14;11760:28;11750:38;;11740:54;;;:::o;11800:122::-;11873:24;11891:5;11873:24;:::i;:::-;11866:5;11863:35;11853:2;;11912:1;11909;11902:12;11853:2;11843:79;:::o;11928:116::-;11998:21;12013:5;11998:21;:::i;:::-;11991:5;11988:32;11978:2;;12034:1;12031;12024:12;11978:2;11968:76;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0;\n\nimport \"./GreenCertificate.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\ncontract GreenCertificateRepository {\n    using Address for address;\n\n    /**\n     * @dev Modifier to allow function to be called only by the contract owner\n     */\n    modifier onlyOwner() {\n        require(msg.sender == _owner);\n        _;\n    }\n\n    /**\n     * @dev Event to be emmitted when a company certificate is created\n     */\n    event CompanyCertification(address certificate);\n\n    /**\n     * @dev Event to be emmitted when a project is added\n     */\n    event ProjectCertification(address company, string project);\n\n    // STATE VARIABLES \n\n    // Owner of this contract\n    address private _owner;\n\n    // Mapping of company to a green certificate\n    mapping(address => GreenCertificate) private _greenCertificates;\n    \n    // Mapping of certified companies\n    mapping(address => bool) private _certifiedCompanies;\n\n    // CONSTRUCTOR\n    constructor() {\n        _owner = msg.sender;\n    }\n\n    // FUNCTIONS\n\n    /**\n     * @dev Function to return the owner of the certificate (Green certifier) \n     */\n    function getOwner() external view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Function to check if a company is certified\n     */\n    function isCertifiedCompany(address company) public view returns (bool) {\n        return _certifiedCompanies[company];\n    }\n\n    /**\n     * @dev Function to get the address of the company's certificate.\n        Requires that a certificate for the company exists\n     */\n    function getCompanyCertificateAddress(address company) public view returns (address) {\n        require(isCertifiedCompany(company), \"Given company is not certified\");\n        return address(_greenCertificates[company]);     \n    }\n\n    /**\n     * @dev Function to get a list of certified project for a company.\n            Requires that a certificate for the company exists.\n     */\n    function getCertifiedProjects(address company) external view returns (string[] memory) {\n        require(isCertifiedCompany(company), \"Given company is not certified\");\n        return _greenCertificates[company].getProjects();\n    }\n\n    /**\n     * @dev Function to check if a project is certified.\n            Requires that a certificate for the company exists.\n     */\n    function isCeritifiedProject(address company, string memory project) external view returns (bool) {\n        require(isCertifiedCompany(company), \"Given company is not certified\");\n        GreenCertificate certificate = _greenCertificates[company];\n        return certificate.isCertifiedProject(project);\n    }\n\n    /**\n     * @dev Function to create a new certificate. \n            Can be only called by the owner of the contract.\n            Creates a new certificate contract if one does not exits \n            for the company. Adds the project to the list of certified projects.\n     */\n    function createCertificate(address company, string memory project) external onlyOwner {\n        // Create certificate for the company if it already does not exist\n        if(_certifiedCompanies[company] == false) {\n            // Create certificate\n            GreenCertificate newCertificate = new GreenCertificate(company);\n            _certifiedCompanies[company] = true;\n            _greenCertificates[company] = newCertificate;\n\n            // Create an event\n            emit CompanyCertification(address(newCertificate));\n        } \n\n        // Add project to the list\n        GreenCertificate certificate = _greenCertificates[company];\n        certificate.addProject(project);   \n        emit ProjectCertification(company, project);      \n    }\n \n}\n\n",
  "sourcePath": "/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertificateRepository.sol",
  "ast": {
    "absolutePath": "project:/contracts/GreenCertificateRepository.sol",
    "exportedSymbols": {
      "Address": [
        1384
      ],
      "GreenCertificate": [
        5181
      ],
      "GreenCertificateRepository": [
        5395
      ]
    },
    "id": 5396,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5183,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:18"
      },
      {
        "absolutePath": "project:/contracts/GreenCertificate.sol",
        "file": "./GreenCertificate.sol",
        "id": 5184,
        "nodeType": "ImportDirective",
        "scope": 5396,
        "sourceUnit": 5182,
        "src": "58:32:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 5185,
        "nodeType": "ImportDirective",
        "scope": 5396,
        "sourceUnit": 1385,
        "src": "91:51:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          5181
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5395,
        "linearizedBaseContracts": [
          5395
        ],
        "name": "GreenCertificateRepository",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5188,
            "libraryName": {
              "id": 5186,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1384,
              "src": "192:7:18"
            },
            "nodeType": "UsingForDirective",
            "src": "186:26:18",
            "typeName": {
              "id": 5187,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "204:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "body": {
              "id": 5199,
              "nodeType": "Block",
              "src": "334:57:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5192,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "352:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "352:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5194,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5214,
                          "src": "366:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "352:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "344:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "344:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5197,
                  "nodeType": "ExpressionStatement",
                  "src": "344:29:18"
                },
                {
                  "id": 5198,
                  "nodeType": "PlaceholderStatement",
                  "src": "383:1:18"
                }
              ]
            },
            "documentation": {
              "id": 5189,
              "nodeType": "StructuredDocumentation",
              "src": "218:90:18",
              "text": " @dev Modifier to allow function to be called only by the contract owner"
            },
            "id": 5200,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:2:18"
            },
            "src": "313:78:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 5201,
              "nodeType": "StructuredDocumentation",
              "src": "397:82:18",
              "text": " @dev Event to be emmitted when a company certificate is created"
            },
            "id": 5205,
            "name": "CompanyCertification",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5203,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "certificate",
                  "nodeType": "VariableDeclaration",
                  "scope": 5205,
                  "src": "511:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:21:18"
            },
            "src": "484:48:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 5206,
              "nodeType": "StructuredDocumentation",
              "src": "538:68:18",
              "text": " @dev Event to be emmitted when a project is added"
            },
            "id": 5212,
            "name": "ProjectCertification",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5208,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 5212,
                  "src": "638:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5210,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 5212,
                  "src": "655:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "637:33:18"
            },
            "src": "611:60:18"
          },
          {
            "constant": false,
            "id": 5214,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 5395,
            "src": "732:22:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5213,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "732:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5219,
            "mutability": "mutable",
            "name": "_greenCertificates",
            "nodeType": "VariableDeclaration",
            "scope": 5395,
            "src": "810:63:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
              "typeString": "mapping(address => contract GreenCertificate)"
            },
            "typeName": {
              "id": 5218,
              "keyType": {
                "id": 5215,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "818:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "810:36:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
                "typeString": "mapping(address => contract GreenCertificate)"
              },
              "valueType": {
                "id": 5217,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 5216,
                  "name": "GreenCertificate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5181,
                  "src": "829:16:18"
                },
                "referencedDeclaration": 5181,
                "src": "829:16:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                  "typeString": "contract GreenCertificate"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5223,
            "mutability": "mutable",
            "name": "_certifiedCompanies",
            "nodeType": "VariableDeclaration",
            "scope": 5395,
            "src": "922:52:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5222,
              "keyType": {
                "id": 5220,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "930:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "922:24:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 5221,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "941:4:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 5231,
              "nodeType": "Block",
              "src": "1014:36:18",
              "statements": [
                {
                  "expression": {
                    "id": 5229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5226,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5214,
                      "src": "1024:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5227,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1033:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1033:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1024:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5230,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:19:18"
                }
              ]
            },
            "id": 5232,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1011:2:18"
            },
            "returnParameters": {
              "id": 5225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:0:18"
            },
            "scope": 5395,
            "src": "1000:50:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5240,
              "nodeType": "Block",
              "src": "1221:30:18",
              "statements": [
                {
                  "expression": {
                    "id": 5238,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5214,
                    "src": "1238:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5237,
                  "id": 5239,
                  "nodeType": "Return",
                  "src": "1231:13:18"
                }
              ]
            },
            "documentation": {
              "id": 5233,
              "nodeType": "StructuredDocumentation",
              "src": "1074:90:18",
              "text": " @dev Function to return the owner of the certificate (Green certifier) "
            },
            "functionSelector": "893d20e8",
            "id": 5241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:2:18"
            },
            "returnParameters": {
              "id": 5237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5236,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5241,
                  "src": "1212:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1211:9:18"
            },
            "scope": 5395,
            "src": "1169:82:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5253,
              "nodeType": "Block",
              "src": "1401:52:18",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5249,
                      "name": "_certifiedCompanies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5223,
                      "src": "1418:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 5251,
                    "indexExpression": {
                      "id": 5250,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5244,
                      "src": "1438:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1418:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5248,
                  "id": 5252,
                  "nodeType": "Return",
                  "src": "1411:35:18"
                }
              ]
            },
            "documentation": {
              "id": 5242,
              "nodeType": "StructuredDocumentation",
              "src": "1257:67:18",
              "text": " @dev Function to check if a company is certified"
            },
            "functionSelector": "cb35e1e6",
            "id": 5254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCertifiedCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5244,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 5254,
                  "src": "1357:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1357:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1356:17:18"
            },
            "returnParameters": {
              "id": 5248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5247,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5254,
                  "src": "1395:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5246,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1394:6:18"
            },
            "scope": 5395,
            "src": "1329:124:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5276,
              "nodeType": "Block",
              "src": "1689:145:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5264,
                            "name": "company",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5257,
                            "src": "1726:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5263,
                          "name": "isCertifiedCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5254,
                          "src": "1707:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 5265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1707:27:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476976656e20636f6d70616e79206973206e6f7420636572746966696564",
                        "id": 5266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1736:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37",
                          "typeString": "literal_string \"Given company is not certified\""
                        },
                        "value": "Given company is not certified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37",
                          "typeString": "literal_string \"Given company is not certified\""
                        }
                      ],
                      "id": 5262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1699:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1699:70:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5268,
                  "nodeType": "ExpressionStatement",
                  "src": "1699:70:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 5271,
                          "name": "_greenCertificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5219,
                          "src": "1794:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
                            "typeString": "mapping(address => contract GreenCertificate)"
                          }
                        },
                        "id": 5273,
                        "indexExpression": {
                          "id": 5272,
                          "name": "company",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5257,
                          "src": "1813:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1794:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      ],
                      "id": 5270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1786:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 5269,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1786:7:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 5274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1786:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5261,
                  "id": 5275,
                  "nodeType": "Return",
                  "src": "1779:43:18"
                }
              ]
            },
            "documentation": {
              "id": 5255,
              "nodeType": "StructuredDocumentation",
              "src": "1459:140:18",
              "text": " @dev Function to get the address of the company's certificate.\nRequires that a certificate for the company exists"
            },
            "functionSelector": "9c0d15fb",
            "id": 5277,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompanyCertificateAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5257,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 5277,
                  "src": "1642:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1641:17:18"
            },
            "returnParameters": {
              "id": 5261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5260,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5277,
                  "src": "1680:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1679:9:18"
            },
            "scope": 5395,
            "src": "1604:230:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5299,
              "nodeType": "Block",
              "src": "2078:145:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5288,
                            "name": "company",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5280,
                            "src": "2115:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5287,
                          "name": "isCertifiedCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5254,
                          "src": "2096:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 5289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2096:27:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476976656e20636f6d70616e79206973206e6f7420636572746966696564",
                        "id": 5290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2125:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37",
                          "typeString": "literal_string \"Given company is not certified\""
                        },
                        "value": "Given company is not certified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37",
                          "typeString": "literal_string \"Given company is not certified\""
                        }
                      ],
                      "id": 5286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2088:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:70:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5292,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:70:18"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 5293,
                          "name": "_greenCertificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5219,
                          "src": "2175:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
                            "typeString": "mapping(address => contract GreenCertificate)"
                          }
                        },
                        "id": 5295,
                        "indexExpression": {
                          "id": 5294,
                          "name": "company",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5280,
                          "src": "2194:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2175:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 5296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProjects",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5141,
                      "src": "2175:39:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (string memory[] memory)"
                      }
                    },
                    "id": 5297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 5285,
                  "id": 5298,
                  "nodeType": "Return",
                  "src": "2168:48:18"
                }
              ]
            },
            "documentation": {
              "id": 5278,
              "nodeType": "StructuredDocumentation",
              "src": "1840:146:18",
              "text": " @dev Function to get a list of certified project for a company.\nRequires that a certificate for the company exists."
            },
            "functionSelector": "42b828b3",
            "id": 5300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCertifiedProjects",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5280,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 5300,
                  "src": "2021:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2020:17:18"
            },
            "returnParameters": {
              "id": 5285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5284,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5300,
                  "src": "2061:15:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5282,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2061:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 5283,
                    "nodeType": "ArrayTypeName",
                    "src": "2061:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2060:17:18"
            },
            "scope": 5395,
            "src": "1991:232:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5329,
              "nodeType": "Block",
              "src": "2464:211:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5312,
                            "name": "company",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5303,
                            "src": "2501:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5311,
                          "name": "isCertifiedCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5254,
                          "src": "2482:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 5313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2482:27:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476976656e20636f6d70616e79206973206e6f7420636572746966696564",
                        "id": 5314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2511:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37",
                          "typeString": "literal_string \"Given company is not certified\""
                        },
                        "value": "Given company is not certified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37",
                          "typeString": "literal_string \"Given company is not certified\""
                        }
                      ],
                      "id": 5310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2474:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2474:70:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5316,
                  "nodeType": "ExpressionStatement",
                  "src": "2474:70:18"
                },
                {
                  "assignments": [
                    5319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5319,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nodeType": "VariableDeclaration",
                      "scope": 5329,
                      "src": "2554:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                        "typeString": "contract GreenCertificate"
                      },
                      "typeName": {
                        "id": 5318,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5317,
                          "name": "GreenCertificate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5181,
                          "src": "2554:16:18"
                        },
                        "referencedDeclaration": 5181,
                        "src": "2554:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5323,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5320,
                      "name": "_greenCertificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5219,
                      "src": "2585:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
                        "typeString": "mapping(address => contract GreenCertificate)"
                      }
                    },
                    "id": 5322,
                    "indexExpression": {
                      "id": 5321,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5303,
                      "src": "2604:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2585:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2554:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5326,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5305,
                        "src": "2660:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 5324,
                        "name": "certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5319,
                        "src": "2629:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 5325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isCertifiedProject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5155,
                      "src": "2629:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) view external returns (bool)"
                      }
                    },
                    "id": 5327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2629:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5309,
                  "id": 5328,
                  "nodeType": "Return",
                  "src": "2622:46:18"
                }
              ]
            },
            "documentation": {
              "id": 5301,
              "nodeType": "StructuredDocumentation",
              "src": "2229:132:18",
              "text": " @dev Function to check if a project is certified.\nRequires that a certificate for the company exists."
            },
            "functionSelector": "620feee3",
            "id": 5330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCeritifiedProject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5303,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 5330,
                  "src": "2395:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2395:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5305,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 5330,
                  "src": "2412:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5304,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2412:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2394:40:18"
            },
            "returnParameters": {
              "id": 5309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5308,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5330,
                  "src": "2458:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5307,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2457:6:18"
            },
            "scope": 5395,
            "src": "2366:309:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5393,
              "nodeType": "Block",
              "src": "3046:666:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 5340,
                        "name": "_certifiedCompanies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5223,
                        "src": "3134:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5342,
                      "indexExpression": {
                        "id": 5341,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5333,
                        "src": "3154:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3134:28:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 5343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3166:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3134:37:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5374,
                  "nodeType": "IfStatement",
                  "src": "3131:367:18",
                  "trueBody": {
                    "id": 5373,
                    "nodeType": "Block",
                    "src": "3173:325:18",
                    "statements": [
                      {
                        "assignments": [
                          5347
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5347,
                            "mutability": "mutable",
                            "name": "newCertificate",
                            "nodeType": "VariableDeclaration",
                            "scope": 5373,
                            "src": "3221:31:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                              "typeString": "contract GreenCertificate"
                            },
                            "typeName": {
                              "id": 5346,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 5345,
                                "name": "GreenCertificate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 5181,
                                "src": "3221:16:18"
                              },
                              "referencedDeclaration": 5181,
                              "src": "3221:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                                "typeString": "contract GreenCertificate"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5353,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 5351,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5333,
                              "src": "3276:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3255:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_GreenCertificate_$5181_$",
                              "typeString": "function (address) returns (contract GreenCertificate)"
                            },
                            "typeName": {
                              "id": 5349,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 5348,
                                "name": "GreenCertificate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 5181,
                                "src": "3259:16:18"
                              },
                              "referencedDeclaration": 5181,
                              "src": "3259:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                                "typeString": "contract GreenCertificate"
                              }
                            }
                          },
                          "id": 5352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3255:29:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                            "typeString": "contract GreenCertificate"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3221:63:18"
                      },
                      {
                        "expression": {
                          "id": 5358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 5354,
                              "name": "_certifiedCompanies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5223,
                              "src": "3298:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 5356,
                            "indexExpression": {
                              "id": 5355,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5333,
                              "src": "3318:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3298:28:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 5357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3329:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3298:35:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5359,
                        "nodeType": "ExpressionStatement",
                        "src": "3298:35:18"
                      },
                      {
                        "expression": {
                          "id": 5364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 5360,
                              "name": "_greenCertificates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5219,
                              "src": "3347:18:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
                                "typeString": "mapping(address => contract GreenCertificate)"
                              }
                            },
                            "id": 5362,
                            "indexExpression": {
                              "id": 5361,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5333,
                              "src": "3366:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3347:27:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                              "typeString": "contract GreenCertificate"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 5363,
                            "name": "newCertificate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5347,
                            "src": "3377:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                              "typeString": "contract GreenCertificate"
                            }
                          },
                          "src": "3347:44:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                            "typeString": "contract GreenCertificate"
                          }
                        },
                        "id": 5365,
                        "nodeType": "ExpressionStatement",
                        "src": "3347:44:18"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5369,
                                  "name": "newCertificate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5347,
                                  "src": "3471:14:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                                    "typeString": "contract GreenCertificate"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                                    "typeString": "contract GreenCertificate"
                                  }
                                ],
                                "id": 5368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3463:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5367,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3463:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3463:23:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5366,
                            "name": "CompanyCertification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5205,
                            "src": "3442:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 5371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3442:45:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5372,
                        "nodeType": "EmitStatement",
                        "src": "3437:50:18"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5377,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nodeType": "VariableDeclaration",
                      "scope": 5393,
                      "src": "3544:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                        "typeString": "contract GreenCertificate"
                      },
                      "typeName": {
                        "id": 5376,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5375,
                          "name": "GreenCertificate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5181,
                          "src": "3544:16:18"
                        },
                        "referencedDeclaration": 5181,
                        "src": "3544:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5381,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5378,
                      "name": "_greenCertificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5219,
                      "src": "3575:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
                        "typeString": "mapping(address => contract GreenCertificate)"
                      }
                    },
                    "id": 5380,
                    "indexExpression": {
                      "id": 5379,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5333,
                      "src": "3594:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3575:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3544:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5385,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5335,
                        "src": "3635:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 5382,
                        "name": "certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5377,
                        "src": "3612:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 5384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addProject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5180,
                      "src": "3612:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 5386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3612:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5387,
                  "nodeType": "ExpressionStatement",
                  "src": "3612:31:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5389,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5333,
                        "src": "3682:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5390,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5335,
                        "src": "3691:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 5388,
                      "name": "ProjectCertification",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5212,
                      "src": "3661:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 5391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3661:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5392,
                  "nodeType": "EmitStatement",
                  "src": "3656:43:18"
                }
              ]
            },
            "documentation": {
              "id": 5331,
              "nodeType": "StructuredDocumentation",
              "src": "2681:274:18",
              "text": " @dev Function to create a new certificate. \nCan be only called by the owner of the contract.\nCreates a new certificate contract if one does not exits \nfor the company. Adds the project to the list of certified projects."
            },
            "functionSelector": "00896eee",
            "id": 5394,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5338,
                "modifierName": {
                  "id": 5337,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5200,
                  "src": "3036:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "3036:9:18"
              }
            ],
            "name": "createCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5333,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 5394,
                  "src": "2987:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5335,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 5394,
                  "src": "3004:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5334,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3004:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2986:40:18"
            },
            "returnParameters": {
              "id": 5339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3046:0:18"
            },
            "scope": 5395,
            "src": "2960:752:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5396,
        "src": "144:3572:18"
      }
    ],
    "src": "32:3686:18"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/GreenCertificateRepository.sol",
    "exportedSymbols": {
      "Address": [
        1384
      ],
      "GreenCertificate": [
        5181
      ],
      "GreenCertificateRepository": [
        5395
      ]
    },
    "id": 5396,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5183,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:18"
      },
      {
        "absolutePath": "project:/contracts/GreenCertificate.sol",
        "file": "./GreenCertificate.sol",
        "id": 5184,
        "nodeType": "ImportDirective",
        "scope": 5396,
        "sourceUnit": 5182,
        "src": "58:32:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 5185,
        "nodeType": "ImportDirective",
        "scope": 5396,
        "sourceUnit": 1385,
        "src": "91:51:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          5181
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 5395,
        "linearizedBaseContracts": [
          5395
        ],
        "name": "GreenCertificateRepository",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5188,
            "libraryName": {
              "id": 5186,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1384,
              "src": "192:7:18"
            },
            "nodeType": "UsingForDirective",
            "src": "186:26:18",
            "typeName": {
              "id": 5187,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "204:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "body": {
              "id": 5199,
              "nodeType": "Block",
              "src": "334:57:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5192,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "352:3:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "352:10:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5194,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5214,
                          "src": "366:6:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "352:20:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "344:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "344:29:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5197,
                  "nodeType": "ExpressionStatement",
                  "src": "344:29:18"
                },
                {
                  "id": 5198,
                  "nodeType": "PlaceholderStatement",
                  "src": "383:1:18"
                }
              ]
            },
            "documentation": {
              "id": 5189,
              "nodeType": "StructuredDocumentation",
              "src": "218:90:18",
              "text": " @dev Modifier to allow function to be called only by the contract owner"
            },
            "id": 5200,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 5190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:2:18"
            },
            "src": "313:78:18",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 5201,
              "nodeType": "StructuredDocumentation",
              "src": "397:82:18",
              "text": " @dev Event to be emmitted when a company certificate is created"
            },
            "id": 5205,
            "name": "CompanyCertification",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5203,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "certificate",
                  "nodeType": "VariableDeclaration",
                  "scope": 5205,
                  "src": "511:19:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:21:18"
            },
            "src": "484:48:18"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 5206,
              "nodeType": "StructuredDocumentation",
              "src": "538:68:18",
              "text": " @dev Event to be emmitted when a project is added"
            },
            "id": 5212,
            "name": "ProjectCertification",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 5211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5208,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 5212,
                  "src": "638:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "638:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5210,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 5212,
                  "src": "655:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5209,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "637:33:18"
            },
            "src": "611:60:18"
          },
          {
            "constant": false,
            "id": 5214,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 5395,
            "src": "732:22:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 5213,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "732:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5219,
            "mutability": "mutable",
            "name": "_greenCertificates",
            "nodeType": "VariableDeclaration",
            "scope": 5395,
            "src": "810:63:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
              "typeString": "mapping(address => contract GreenCertificate)"
            },
            "typeName": {
              "id": 5218,
              "keyType": {
                "id": 5215,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "818:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "810:36:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
                "typeString": "mapping(address => contract GreenCertificate)"
              },
              "valueType": {
                "id": 5217,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 5216,
                  "name": "GreenCertificate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5181,
                  "src": "829:16:18"
                },
                "referencedDeclaration": 5181,
                "src": "829:16:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                  "typeString": "contract GreenCertificate"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5223,
            "mutability": "mutable",
            "name": "_certifiedCompanies",
            "nodeType": "VariableDeclaration",
            "scope": 5395,
            "src": "922:52:18",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 5222,
              "keyType": {
                "id": 5220,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "930:7:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "922:24:18",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 5221,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "941:4:18",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 5231,
              "nodeType": "Block",
              "src": "1014:36:18",
              "statements": [
                {
                  "expression": {
                    "id": 5229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5226,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5214,
                      "src": "1024:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 5227,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1033:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1033:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1024:19:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 5230,
                  "nodeType": "ExpressionStatement",
                  "src": "1024:19:18"
                }
              ]
            },
            "id": 5232,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1011:2:18"
            },
            "returnParameters": {
              "id": 5225,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1014:0:18"
            },
            "scope": 5395,
            "src": "1000:50:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5240,
              "nodeType": "Block",
              "src": "1221:30:18",
              "statements": [
                {
                  "expression": {
                    "id": 5238,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5214,
                    "src": "1238:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5237,
                  "id": 5239,
                  "nodeType": "Return",
                  "src": "1231:13:18"
                }
              ]
            },
            "documentation": {
              "id": 5233,
              "nodeType": "StructuredDocumentation",
              "src": "1074:90:18",
              "text": " @dev Function to return the owner of the certificate (Green certifier) "
            },
            "functionSelector": "893d20e8",
            "id": 5241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5234,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1186:2:18"
            },
            "returnParameters": {
              "id": 5237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5236,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5241,
                  "src": "1212:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1211:9:18"
            },
            "scope": 5395,
            "src": "1169:82:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5253,
              "nodeType": "Block",
              "src": "1401:52:18",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 5249,
                      "name": "_certifiedCompanies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5223,
                      "src": "1418:19:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 5251,
                    "indexExpression": {
                      "id": 5250,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5244,
                      "src": "1438:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1418:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5248,
                  "id": 5252,
                  "nodeType": "Return",
                  "src": "1411:35:18"
                }
              ]
            },
            "documentation": {
              "id": 5242,
              "nodeType": "StructuredDocumentation",
              "src": "1257:67:18",
              "text": " @dev Function to check if a company is certified"
            },
            "functionSelector": "cb35e1e6",
            "id": 5254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCertifiedCompany",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5244,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 5254,
                  "src": "1357:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1357:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1356:17:18"
            },
            "returnParameters": {
              "id": 5248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5247,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5254,
                  "src": "1395:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5246,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1394:6:18"
            },
            "scope": 5395,
            "src": "1329:124:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5276,
              "nodeType": "Block",
              "src": "1689:145:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5264,
                            "name": "company",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5257,
                            "src": "1726:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5263,
                          "name": "isCertifiedCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5254,
                          "src": "1707:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 5265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1707:27:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476976656e20636f6d70616e79206973206e6f7420636572746966696564",
                        "id": 5266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1736:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37",
                          "typeString": "literal_string \"Given company is not certified\""
                        },
                        "value": "Given company is not certified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37",
                          "typeString": "literal_string \"Given company is not certified\""
                        }
                      ],
                      "id": 5262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1699:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1699:70:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5268,
                  "nodeType": "ExpressionStatement",
                  "src": "1699:70:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 5271,
                          "name": "_greenCertificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5219,
                          "src": "1794:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
                            "typeString": "mapping(address => contract GreenCertificate)"
                          }
                        },
                        "id": 5273,
                        "indexExpression": {
                          "id": 5272,
                          "name": "company",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5257,
                          "src": "1813:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1794:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      ],
                      "id": 5270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1786:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 5269,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1786:7:18",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 5274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1786:36:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 5261,
                  "id": 5275,
                  "nodeType": "Return",
                  "src": "1779:43:18"
                }
              ]
            },
            "documentation": {
              "id": 5255,
              "nodeType": "StructuredDocumentation",
              "src": "1459:140:18",
              "text": " @dev Function to get the address of the company's certificate.\nRequires that a certificate for the company exists"
            },
            "functionSelector": "9c0d15fb",
            "id": 5277,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCompanyCertificateAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5257,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 5277,
                  "src": "1642:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1641:17:18"
            },
            "returnParameters": {
              "id": 5261,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5260,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5277,
                  "src": "1680:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1680:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1679:9:18"
            },
            "scope": 5395,
            "src": "1604:230:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5299,
              "nodeType": "Block",
              "src": "2078:145:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5288,
                            "name": "company",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5280,
                            "src": "2115:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5287,
                          "name": "isCertifiedCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5254,
                          "src": "2096:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 5289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2096:27:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476976656e20636f6d70616e79206973206e6f7420636572746966696564",
                        "id": 5290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2125:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37",
                          "typeString": "literal_string \"Given company is not certified\""
                        },
                        "value": "Given company is not certified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37",
                          "typeString": "literal_string \"Given company is not certified\""
                        }
                      ],
                      "id": 5286,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2088:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:70:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5292,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:70:18"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 5293,
                          "name": "_greenCertificates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5219,
                          "src": "2175:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
                            "typeString": "mapping(address => contract GreenCertificate)"
                          }
                        },
                        "id": 5295,
                        "indexExpression": {
                          "id": 5294,
                          "name": "company",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5280,
                          "src": "2194:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2175:27:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 5296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProjects",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5141,
                      "src": "2175:39:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (string memory[] memory)"
                      }
                    },
                    "id": 5297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2175:41:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "functionReturnParameters": 5285,
                  "id": 5298,
                  "nodeType": "Return",
                  "src": "2168:48:18"
                }
              ]
            },
            "documentation": {
              "id": 5278,
              "nodeType": "StructuredDocumentation",
              "src": "1840:146:18",
              "text": " @dev Function to get a list of certified project for a company.\nRequires that a certificate for the company exists."
            },
            "functionSelector": "42b828b3",
            "id": 5300,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCertifiedProjects",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5280,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 5300,
                  "src": "2021:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2021:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2020:17:18"
            },
            "returnParameters": {
              "id": 5285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5284,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5300,
                  "src": "2061:15:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5282,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "2061:6:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 5283,
                    "nodeType": "ArrayTypeName",
                    "src": "2061:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2060:17:18"
            },
            "scope": 5395,
            "src": "1991:232:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5329,
              "nodeType": "Block",
              "src": "2464:211:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5312,
                            "name": "company",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5303,
                            "src": "2501:7:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5311,
                          "name": "isCertifiedCompany",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5254,
                          "src": "2482:18:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 5313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2482:27:18",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "476976656e20636f6d70616e79206973206e6f7420636572746966696564",
                        "id": 5314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2511:32:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37",
                          "typeString": "literal_string \"Given company is not certified\""
                        },
                        "value": "Given company is not certified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1067a63c72e90522da1ee77e2e69e399c92dc1ba79666a27102783b6b3838f37",
                          "typeString": "literal_string \"Given company is not certified\""
                        }
                      ],
                      "id": 5310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2474:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2474:70:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5316,
                  "nodeType": "ExpressionStatement",
                  "src": "2474:70:18"
                },
                {
                  "assignments": [
                    5319
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5319,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nodeType": "VariableDeclaration",
                      "scope": 5329,
                      "src": "2554:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                        "typeString": "contract GreenCertificate"
                      },
                      "typeName": {
                        "id": 5318,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5317,
                          "name": "GreenCertificate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5181,
                          "src": "2554:16:18"
                        },
                        "referencedDeclaration": 5181,
                        "src": "2554:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5323,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5320,
                      "name": "_greenCertificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5219,
                      "src": "2585:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
                        "typeString": "mapping(address => contract GreenCertificate)"
                      }
                    },
                    "id": 5322,
                    "indexExpression": {
                      "id": 5321,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5303,
                      "src": "2604:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2585:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2554:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5326,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5305,
                        "src": "2660:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 5324,
                        "name": "certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5319,
                        "src": "2629:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 5325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isCertifiedProject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5155,
                      "src": "2629:30:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) view external returns (bool)"
                      }
                    },
                    "id": 5327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2629:39:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5309,
                  "id": 5328,
                  "nodeType": "Return",
                  "src": "2622:46:18"
                }
              ]
            },
            "documentation": {
              "id": 5301,
              "nodeType": "StructuredDocumentation",
              "src": "2229:132:18",
              "text": " @dev Function to check if a project is certified.\nRequires that a certificate for the company exists."
            },
            "functionSelector": "620feee3",
            "id": 5330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCeritifiedProject",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5303,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 5330,
                  "src": "2395:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5302,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2395:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5305,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 5330,
                  "src": "2412:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5304,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2412:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2394:40:18"
            },
            "returnParameters": {
              "id": 5309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5308,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5330,
                  "src": "2458:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5307,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2457:6:18"
            },
            "scope": 5395,
            "src": "2366:309:18",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5393,
              "nodeType": "Block",
              "src": "3046:666:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 5340,
                        "name": "_certifiedCompanies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5223,
                        "src": "3134:19:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 5342,
                      "indexExpression": {
                        "id": 5341,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5333,
                        "src": "3154:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3134:28:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 5343,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3166:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3134:37:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5374,
                  "nodeType": "IfStatement",
                  "src": "3131:367:18",
                  "trueBody": {
                    "id": 5373,
                    "nodeType": "Block",
                    "src": "3173:325:18",
                    "statements": [
                      {
                        "assignments": [
                          5347
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 5347,
                            "mutability": "mutable",
                            "name": "newCertificate",
                            "nodeType": "VariableDeclaration",
                            "scope": 5373,
                            "src": "3221:31:18",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                              "typeString": "contract GreenCertificate"
                            },
                            "typeName": {
                              "id": 5346,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 5345,
                                "name": "GreenCertificate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 5181,
                                "src": "3221:16:18"
                              },
                              "referencedDeclaration": 5181,
                              "src": "3221:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                                "typeString": "contract GreenCertificate"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 5353,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 5351,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5333,
                              "src": "3276:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3255:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_GreenCertificate_$5181_$",
                              "typeString": "function (address) returns (contract GreenCertificate)"
                            },
                            "typeName": {
                              "id": 5349,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 5348,
                                "name": "GreenCertificate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 5181,
                                "src": "3259:16:18"
                              },
                              "referencedDeclaration": 5181,
                              "src": "3259:16:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                                "typeString": "contract GreenCertificate"
                              }
                            }
                          },
                          "id": 5352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3255:29:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                            "typeString": "contract GreenCertificate"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3221:63:18"
                      },
                      {
                        "expression": {
                          "id": 5358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 5354,
                              "name": "_certifiedCompanies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5223,
                              "src": "3298:19:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 5356,
                            "indexExpression": {
                              "id": 5355,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5333,
                              "src": "3318:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3298:28:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 5357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3329:4:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3298:35:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5359,
                        "nodeType": "ExpressionStatement",
                        "src": "3298:35:18"
                      },
                      {
                        "expression": {
                          "id": 5364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 5360,
                              "name": "_greenCertificates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5219,
                              "src": "3347:18:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
                                "typeString": "mapping(address => contract GreenCertificate)"
                              }
                            },
                            "id": 5362,
                            "indexExpression": {
                              "id": 5361,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5333,
                              "src": "3366:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3347:27:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                              "typeString": "contract GreenCertificate"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 5363,
                            "name": "newCertificate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5347,
                            "src": "3377:14:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                              "typeString": "contract GreenCertificate"
                            }
                          },
                          "src": "3347:44:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                            "typeString": "contract GreenCertificate"
                          }
                        },
                        "id": 5365,
                        "nodeType": "ExpressionStatement",
                        "src": "3347:44:18"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 5369,
                                  "name": "newCertificate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5347,
                                  "src": "3471:14:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                                    "typeString": "contract GreenCertificate"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                                    "typeString": "contract GreenCertificate"
                                  }
                                ],
                                "id": 5368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3463:7:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 5367,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3463:7:18",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3463:23:18",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 5366,
                            "name": "CompanyCertification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5205,
                            "src": "3442:20:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 5371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3442:45:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5372,
                        "nodeType": "EmitStatement",
                        "src": "3437:50:18"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5377
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5377,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nodeType": "VariableDeclaration",
                      "scope": 5393,
                      "src": "3544:28:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                        "typeString": "contract GreenCertificate"
                      },
                      "typeName": {
                        "id": 5376,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 5375,
                          "name": "GreenCertificate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 5181,
                          "src": "3544:16:18"
                        },
                        "referencedDeclaration": 5181,
                        "src": "3544:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5381,
                  "initialValue": {
                    "baseExpression": {
                      "id": 5378,
                      "name": "_greenCertificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5219,
                      "src": "3575:18:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$5181_$",
                        "typeString": "mapping(address => contract GreenCertificate)"
                      }
                    },
                    "id": 5380,
                    "indexExpression": {
                      "id": 5379,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5333,
                      "src": "3594:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3575:27:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3544:58:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5385,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5335,
                        "src": "3635:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 5382,
                        "name": "certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5377,
                        "src": "3612:11:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$5181",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 5384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addProject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5180,
                      "src": "3612:22:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 5386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3612:31:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5387,
                  "nodeType": "ExpressionStatement",
                  "src": "3612:31:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5389,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5333,
                        "src": "3682:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5390,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5335,
                        "src": "3691:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 5388,
                      "name": "ProjectCertification",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5212,
                      "src": "3661:20:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 5391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3661:38:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5392,
                  "nodeType": "EmitStatement",
                  "src": "3656:43:18"
                }
              ]
            },
            "documentation": {
              "id": 5331,
              "nodeType": "StructuredDocumentation",
              "src": "2681:274:18",
              "text": " @dev Function to create a new certificate. \nCan be only called by the owner of the contract.\nCreates a new certificate contract if one does not exits \nfor the company. Adds the project to the list of certified projects."
            },
            "functionSelector": "00896eee",
            "id": 5394,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5338,
                "modifierName": {
                  "id": 5337,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5200,
                  "src": "3036:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "3036:9:18"
              }
            ],
            "name": "createCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5336,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5333,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 5394,
                  "src": "2987:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2987:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5335,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 5394,
                  "src": "3004:21:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 5334,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3004:6:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2986:40:18"
            },
            "returnParameters": {
              "id": 5339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3046:0:18"
            },
            "scope": 5395,
            "src": "2960:752:18",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 5396,
        "src": "144:3572:18"
      }
    ],
    "src": "32:3686:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x529D690Ef16378FeE7B52544be5f69bA92c79f36",
      "transactionHash": "0x313c1d7eaebfb85e25ba0a2d5232b0d874efc493756dce61b791a1cab9a469d5"
    },
    "5777": {
      "events": {},
      "links": {},
      "address": "0xDE6A4c98E6d8D6491b198f9806D3b0c236935426",
      "transactionHash": "0xb522940e2a7025bbacbaf1fba9b26c67bc7051cde4be0cc313ab9d9ba719b461"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-09-06T12:53:11.496Z",
  "networkType": "ethereum",
  "devdoc": {
    "events": {
      "CompanyCertification(address)": {
        "details": "Event to be emmitted when a company certificate is created"
      },
      "ProjectCertification(address,string)": {
        "details": "Event to be emmitted when a project is added"
      }
    },
    "kind": "dev",
    "methods": {
      "createCertificate(address,string)": {
        "details": "Function to create a new certificate.  Can be only called by the owner of the contract. Creates a new certificate contract if one does not exits  for the company. Adds the project to the list of certified projects."
      },
      "getCertifiedProjects(address)": {
        "details": "Function to get a list of certified project for a company. Requires that a certificate for the company exists."
      },
      "getCompanyCertificateAddress(address)": {
        "details": "Function to get the address of the company's certificate. Requires that a certificate for the company exists"
      },
      "getOwner()": {
        "details": "Function to return the owner of the certificate (Green certifier) "
      },
      "isCeritifiedProject(address,string)": {
        "details": "Function to check if a project is certified. Requires that a certificate for the company exists."
      },
      "isCertifiedCompany(address)": {
        "details": "Function to check if a company is certified"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}