{
  "contractName": "GreenCertifier",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract GreenCertificate",
          "name": "certificate",
          "type": "address"
        }
      ],
      "name": "CompanyCertification",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "company",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "project",
          "type": "string"
        }
      ],
      "name": "ProjectCertification",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_certifiedCompanies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_greenCertificates",
      "outputs": [
        {
          "internalType": "contract GreenCertificate",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "company",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "project",
          "type": "string"
        }
      ],
      "name": "createCertificate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "company",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "project",
          "type": "string"
        }
      ],
      "name": "isCertified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract GreenCertificate\",\"name\":\"certificate\",\"type\":\"address\"}],\"name\":\"CompanyCertification\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"ProjectCertification\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_certifiedCompanies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_greenCertificates\",\"outputs\":[{\"internalType\":\"contract GreenCertificate\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"createCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"isCertified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertifier.sol\":\"GreenCertifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertificate.sol\":{\"keccak256\":\"0xce8753fe99c202be932529d52b3d95c3c8e012946dee96c8eec627b8ce9d1d0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://573adc9e45e85513644f465456767757f0cac51421dd556351b72c0208c7d763\",\"dweb:/ipfs/QmNtyPPijhtKpRnpqFA3MMDtUy9tkGabibCaiSyvi8QtUf\"]},\"/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertifier.sol\":{\"keccak256\":\"0x6e5b4e30e6f1f83f69bb73eae1d91d6b87e8adec2ce316d24ee1b62e01957789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://931c76abc6ac0ca1913998d8165c6d22f452ea0793ec489bc663500d96ae0c88\",\"dweb:/ipfs/QmSiPzg5THFBQduH82sqf9mGm3pDm7B1t3W3ccF9xiM17W\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611076806100606000396000f3fe608060405234801561001057600080fd5b50600436106100565760003560e01c8062896eee1461005b5780635a3987fe146100775780636b3b848a146100a7578063b2bdfa7b146100d7578063f755de72146100f5575b600080fd5b610075600480360381019061007091906106ed565b610125565b005b610091600480360381019061008c91906106c4565b61042a565b60405161009e9190610876565b60405180910390f35b6100c160048036038101906100bc91906106ed565b61045d565b6040516100ce919061085b565b60405180910390f35b6100df6105e1565b6040516100ec9190610810565b60405180910390f35b61010f600480360381019061010a91906106c4565b610605565b60405161011c919061085b565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017d57600080fd5b60001515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141561031d576000826040516101e590610625565b6101ef9190610810565b604051809103906000f08015801561020b573d6000803e3d6000fd5b5090506001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd74aba97929f9c483acd3c361751a46ee8ef31b85336dec91f503d695dab6df1816040516103139190610876565b60405180910390a1505b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16630ed047d4836040518263ffffffff1660e01b81526004016103ba9190610891565b600060405180830381600087803b1580156103d457600080fd5b505af11580156103e8573d6000803e3d6000fd5b505050507f7290139a1d883a1284fc3550b1ca8c453f0520aa22089656d30587b014cb69fb838360405161041d92919061082b565b60405180910390a1505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e2906108b3565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663ffa67370846040518263ffffffff1660e01b81526004016105889190610891565b60206040518083038186803b1580156105a057600080fd5b505afa1580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d89190610741565b91505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b6105de80610a6383390190565b600061064561064084610904565b6108d3565b90508281526020810184848401111561065d57600080fd5b6106688482856109b2565b509392505050565b60008135905061067f81610a34565b92915050565b60008151905061069481610a4b565b92915050565b600082601f8301126106ab57600080fd5b81356106bb848260208601610632565b91505092915050565b6000602082840312156106d657600080fd5b60006106e484828501610670565b91505092915050565b6000806040838503121561070057600080fd5b600061070e85828601610670565b925050602083013567ffffffffffffffff81111561072b57600080fd5b6107378582860161069a565b9150509250929050565b60006020828403121561075357600080fd5b600061076184828501610685565b91505092915050565b61077381610950565b82525050565b61078281610962565b82525050565b6107918161098e565b82525050565b60006107a282610934565b6107ac818561093f565b93506107bc8185602086016109c1565b6107c581610a23565b840191505092915050565b60006107dd60188361093f565b91507f436f6d70616e79206973206e6f742063657274696669656400000000000000006000830152602082019050919050565b6000602082019050610825600083018461076a565b92915050565b6000604082019050610840600083018561076a565b81810360208301526108528184610797565b90509392505050565b60006020820190506108706000830184610779565b92915050565b600060208201905061088b6000830184610788565b92915050565b600060208201905081810360008301526108ab8184610797565b905092915050565b600060208201905081810360008301526108cc816107d0565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156108fa576108f96109f4565b5b8060405250919050565b600067ffffffffffffffff82111561091f5761091e6109f4565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061095b8261096e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610999826109a0565b9050919050565b60006109ab8261096e565b9050919050565b82818337600083830152505050565b60005b838110156109df5780820151818401526020810190506109c4565b838111156109ee576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610a3d81610950565b8114610a4857600080fd5b50565b610a5481610962565b8114610a5f57600080fd5b5056fe608060405234801561001057600080fd5b506040516105de3803806105de833981810160405281019061003291906100ce565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100c881610129565b92915050565b6000602082840312156100e057600080fd5b60006100ee848285016100b9565b91505092915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610132816100f7565b811461013d57600080fd5b50565b61048f8061014f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630ed047d414610051578063127810bc1461006d578063b2bdfa7b1461008b578063ffa67370146100a9575b600080fd5b61006b60048036038101906100669190610256565b6100d9565b005b61007561016b565b60405161008291906102fd565b60405180910390f35b610093610195565b6040516100a091906102fd565b60405180910390f35b6100c360048036038101906100be9190610256565b6101b9565b6040516100d09190610318565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461013157600080fd5b600160028260405161014391906102e6565b908152602001604051809103902060006101000a81548160ff02191690831515021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006002826040516101cb91906102e6565b908152602001604051809103902060009054906101000a900460ff169050919050565b60006102016101fc84610364565b610333565b90508281526020810184848401111561021957600080fd5b6102248482856103e8565b509392505050565b600082601f83011261023d57600080fd5b813561024d8482602086016101ee565b91505092915050565b60006020828403121561026857600080fd5b600082013567ffffffffffffffff81111561028257600080fd5b61028e8482850161022c565b91505092915050565b6102a0816103aa565b82525050565b6102af816103bc565b82525050565b60006102c082610394565b6102ca818561039f565b93506102da8185602086016103f7565b80840191505092915050565b60006102f282846102b5565b915081905092915050565b60006020820190506103126000830184610297565b92915050565b600060208201905061032d60008301846102a6565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561035a5761035961042a565b5b8060405250919050565b600067ffffffffffffffff82111561037f5761037e61042a565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081905092915050565b60006103b5826103c8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156104155780820151818401526020810190506103fa565b83811115610424576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212205136b441fb565990107227185c631df651bf422c4623925cfc81ba3919aa0e5364736f6c63430008000033a264697066735822122043e012ab38e9fe6a616c1a825ef6175476a74af27276463bd1b65be919a11bb864736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100565760003560e01c8062896eee1461005b5780635a3987fe146100775780636b3b848a146100a7578063b2bdfa7b146100d7578063f755de72146100f5575b600080fd5b610075600480360381019061007091906106ed565b610125565b005b610091600480360381019061008c91906106c4565b61042a565b60405161009e9190610876565b60405180910390f35b6100c160048036038101906100bc91906106ed565b61045d565b6040516100ce919061085b565b60405180910390f35b6100df6105e1565b6040516100ec9190610810565b60405180910390f35b61010f600480360381019061010a91906106c4565b610605565b60405161011c919061085b565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017d57600080fd5b60001515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141561031d576000826040516101e590610625565b6101ef9190610810565b604051809103906000f08015801561020b573d6000803e3d6000fd5b5090506001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd74aba97929f9c483acd3c361751a46ee8ef31b85336dec91f503d695dab6df1816040516103139190610876565b60405180910390a1505b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16630ed047d4836040518263ffffffff1660e01b81526004016103ba9190610891565b600060405180830381600087803b1580156103d457600080fd5b505af11580156103e8573d6000803e3d6000fd5b505050507f7290139a1d883a1284fc3550b1ca8c453f0520aa22089656d30587b014cb69fb838360405161041d92919061082b565b60405180910390a1505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e2906108b3565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663ffa67370846040518263ffffffff1660e01b81526004016105889190610891565b60206040518083038186803b1580156105a057600080fd5b505afa1580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d89190610741565b91505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b6105de80610a6383390190565b600061064561064084610904565b6108d3565b90508281526020810184848401111561065d57600080fd5b6106688482856109b2565b509392505050565b60008135905061067f81610a34565b92915050565b60008151905061069481610a4b565b92915050565b600082601f8301126106ab57600080fd5b81356106bb848260208601610632565b91505092915050565b6000602082840312156106d657600080fd5b60006106e484828501610670565b91505092915050565b6000806040838503121561070057600080fd5b600061070e85828601610670565b925050602083013567ffffffffffffffff81111561072b57600080fd5b6107378582860161069a565b9150509250929050565b60006020828403121561075357600080fd5b600061076184828501610685565b91505092915050565b61077381610950565b82525050565b61078281610962565b82525050565b6107918161098e565b82525050565b60006107a282610934565b6107ac818561093f565b93506107bc8185602086016109c1565b6107c581610a23565b840191505092915050565b60006107dd60188361093f565b91507f436f6d70616e79206973206e6f742063657274696669656400000000000000006000830152602082019050919050565b6000602082019050610825600083018461076a565b92915050565b6000604082019050610840600083018561076a565b81810360208301526108528184610797565b90509392505050565b60006020820190506108706000830184610779565b92915050565b600060208201905061088b6000830184610788565b92915050565b600060208201905081810360008301526108ab8184610797565b905092915050565b600060208201905081810360008301526108cc816107d0565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156108fa576108f96109f4565b5b8060405250919050565b600067ffffffffffffffff82111561091f5761091e6109f4565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061095b8261096e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610999826109a0565b9050919050565b60006109ab8261096e565b9050919050565b82818337600083830152505050565b60005b838110156109df5780820151818401526020810190506109c4565b838111156109ee576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610a3d81610950565b8114610a4857600080fd5b50565b610a5481610962565b8114610a5f57600080fd5b5056fe608060405234801561001057600080fd5b506040516105de3803806105de833981810160405281019061003291906100ce565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100c881610129565b92915050565b6000602082840312156100e057600080fd5b60006100ee848285016100b9565b91505092915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610132816100f7565b811461013d57600080fd5b50565b61048f8061014f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630ed047d414610051578063127810bc1461006d578063b2bdfa7b1461008b578063ffa67370146100a9575b600080fd5b61006b60048036038101906100669190610256565b6100d9565b005b61007561016b565b60405161008291906102fd565b60405180910390f35b610093610195565b6040516100a091906102fd565b60405180910390f35b6100c360048036038101906100be9190610256565b6101b9565b6040516100d09190610318565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461013157600080fd5b600160028260405161014391906102e6565b908152602001604051809103902060006101000a81548160ff02191690831515021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006002826040516101cb91906102e6565b908152602001604051809103902060009054906101000a900460ff169050919050565b60006102016101fc84610364565b610333565b90508281526020810184848401111561021957600080fd5b6102248482856103e8565b509392505050565b600082601f83011261023d57600080fd5b813561024d8482602086016101ee565b91505092915050565b60006020828403121561026857600080fd5b600082013567ffffffffffffffff81111561028257600080fd5b61028e8482850161022c565b91505092915050565b6102a0816103aa565b82525050565b6102af816103bc565b82525050565b60006102c082610394565b6102ca818561039f565b93506102da8185602086016103f7565b80840191505092915050565b60006102f282846102b5565b915081905092915050565b60006020820190506103126000830184610297565b92915050565b600060208201905061032d60008301846102a6565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561035a5761035961042a565b5b8060405250919050565b600067ffffffffffffffff82111561037f5761037e61042a565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600081905092915050565b60006103b5826103c8565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156104155780820151818401526020810190506103fa565b83811115610424576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212205136b441fb565990107227185c631df651bf422c4623925cfc81ba3919aa0e5364736f6c63430008000033a264697066735822122043e012ab38e9fe6a616c1a825ef6175476a74af27276463bd1b65be919a11bb864736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7605:18",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:18"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:18"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:18"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:18"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:18"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:18"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:18"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:18"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:18"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:18"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:18",
                "type": ""
              }
            ],
            "src": "7:344:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "409:87:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "419:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "441:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "428:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:20:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "419:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "484:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "457:26:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:33:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:33:18"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "387:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "395:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "403:5:18",
                "type": ""
              }
            ],
            "src": "357:139:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "562:77:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "572:22:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "587:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "581:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "581:13:18"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "572:5:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "627:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "603:23:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "603:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "603:30:18"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "540:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "548:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "556:5:18",
                "type": ""
              }
            ],
            "src": "502:137:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "721:211:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "770:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "779:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "782:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "772:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "772:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "772:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "749:6:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "757:4:18",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "745:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "745:17:18"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "764:3:18"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "741:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "741:27:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "734:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "734:35:18"
                  },
                  "nodeType": "YulIf",
                  "src": "731:2:18"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "795:34:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "822:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "809:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "809:20:18"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "799:6:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "838:88:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "899:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "907:4:18",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "895:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "895:17:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "914:6:18"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "922:3:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "847:47:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "847:79:18"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "838:5:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "699:6:18",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "707:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "715:5:18",
                "type": ""
              }
            ],
            "src": "659:273:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1004:196:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1050:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1059:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1062:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1052:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1052:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1052:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1025:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1034:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1021:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1021:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1046:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1017:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1017:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1014:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1076:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1091:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1105:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1095:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1120:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1155:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1166:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1151:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1151:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1175:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1130:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1130:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1120:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "974:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "985:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "997:6:18",
                "type": ""
              }
            ],
            "src": "938:262:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1299:427:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1345:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1354:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1357:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1347:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1347:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1347:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1320:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1329:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1316:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1316:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1341:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1312:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1312:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1309:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1371:117:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1386:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1400:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1390:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1415:63:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1450:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1461:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1446:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1446:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1470:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1425:20:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1425:53:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1415:6:18"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1498:221:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1513:46:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1544:9:18"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1555:2:18",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1540:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1540:18:18"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1527:12:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1527:32:18"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1517:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1606:16:18",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1615:1:18",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1618:1:18",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1608:6:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1608:12:18"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1608:12:18"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1578:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1586:18:18",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1575:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1575:30:18"
                      },
                      "nodeType": "YulIf",
                      "src": "1572:2:18"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1636:73:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1681:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1692:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1677:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1677:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1701:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1646:30:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1646:63:18"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1636:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1261:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1272:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1284:6:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1292:6:18",
                "type": ""
              }
            ],
            "src": "1206:520:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1806:204:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1852:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1861:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1864:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1854:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1854:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1854:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1827:7:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1836:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1823:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1823:23:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1848:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1819:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1819:32:18"
                  },
                  "nodeType": "YulIf",
                  "src": "1816:2:18"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1878:125:18",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1893:15:18",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1907:1:18",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1897:6:18",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1922:71:18",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1965:9:18"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1976:6:18"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1961:3:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1961:22:18"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1985:7:18"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1932:28:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1932:61:18"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1922:6:18"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1776:9:18",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1787:7:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1799:6:18",
                "type": ""
              }
            ],
            "src": "1732:278:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2081:53:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2098:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2121:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2103:17:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2103:24:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2091:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2091:37:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2091:37:18"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2069:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2076:3:18",
                "type": ""
              }
            ],
            "src": "2016:118:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2199:50:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2216:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2236:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2221:14:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2221:21:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2209:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2209:34:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2209:34:18"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2187:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2194:3:18",
                "type": ""
              }
            ],
            "src": "2140:109:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2344:90:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2361:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2421:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_GreenCertificate_$853_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2366:54:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2366:61:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2354:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2354:74:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2354:74:18"
                }
              ]
            },
            "name": "abi_encode_t_contract$_GreenCertificate_$853_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2332:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2339:3:18",
                "type": ""
              }
            ],
            "src": "2255:179:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2532:272:18",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2542:53:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2589:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2556:32:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2556:39:18"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2546:6:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2604:78:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2670:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2675:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2611:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2611:71:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2604:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2717:5:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2724:4:18",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2713:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2713:16:18"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2731:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2736:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2691:21:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2691:52:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2691:52:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2752:46:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2763:3:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2790:6:18"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2768:21:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2768:29:18"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2759:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2759:39:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2752:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2513:5:18",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2520:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2528:3:18",
                "type": ""
              }
            ],
            "src": "2440:364:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2956:176:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2966:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3032:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3037:2:18",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2973:58:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2973:67:18"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2966:3:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3061:3:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3066:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3057:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3057:11:18"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3070:26:18",
                        "type": "",
                        "value": "Company is not certified"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3050:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3050:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3050:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3107:19:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3118:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3123:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3114:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3114:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3107:3:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2944:3:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2952:3:18",
                "type": ""
              }
            ],
            "src": "2810:322:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3236:124:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3246:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3258:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3269:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3254:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3254:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3246:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3326:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3339:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3350:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3335:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3335:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3282:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3282:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3282:71:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3208:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3220:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3231:4:18",
                "type": ""
              }
            ],
            "src": "3138:222:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3512:277:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3522:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3534:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3545:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3530:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3530:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3522:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3602:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3615:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3626:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3611:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3611:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3558:43:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3558:71:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3558:71:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3650:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3661:2:18",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3646:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3646:18:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3670:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3676:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3666:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3666:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3639:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3639:48:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3639:48:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3696:86:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3768:6:18"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3777:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3704:63:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3704:78:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3696:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3476:9:18",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3488:6:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3496:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3507:4:18",
                "type": ""
              }
            ],
            "src": "3366:423:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3887:118:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3897:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3909:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3920:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3905:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3905:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3897:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3971:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3984:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3995:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3980:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3980:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3933:37:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3933:65:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3933:65:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3859:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3871:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3882:4:18",
                "type": ""
              }
            ],
            "src": "3795:210:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4133:148:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4143:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4155:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4166:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4151:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4151:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4143:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4247:6:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4260:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4271:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4256:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4256:17:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_GreenCertificate_$853_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4179:67:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4179:95:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4179:95:18"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_GreenCertificate_$853__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4105:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4117:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4128:4:18",
                "type": ""
              }
            ],
            "src": "4011:270:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4405:195:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4415:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4427:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4438:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4423:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4423:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4415:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4462:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4473:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4458:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4458:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4481:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4487:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4477:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4477:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4451:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4451:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4451:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4507:86:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4579:6:18"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4588:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4515:63:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4515:78:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4507:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4377:9:18",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4389:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4400:4:18",
                "type": ""
              }
            ],
            "src": "4287:313:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4777:248:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4787:26:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4799:9:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4810:2:18",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4795:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4795:18:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4787:4:18"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4834:9:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4845:1:18",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4830:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4830:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4853:4:18"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4859:9:18"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4849:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4849:20:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4823:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4823:47:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4823:47:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4879:139:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5013:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4887:124:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4887:131:18"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4879:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4757:9:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4772:4:18",
                "type": ""
              }
            ],
            "src": "4606:419:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5071:243:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5081:19:18",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5097:2:18",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5091:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5091:9:18"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5081:6:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5109:35:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5131:6:18"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5139:4:18"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5127:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5127:17:18"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "5113:10:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5255:22:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5257:16:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5257:18:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5257:18:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5198:10:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5210:18:18",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5195:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5195:34:18"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5234:10:18"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5246:6:18"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5231:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5231:22:18"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "5192:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5192:62:18"
                  },
                  "nodeType": "YulIf",
                  "src": "5189:2:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5293:2:18",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "5297:10:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5286:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5286:22:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5286:22:18"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5055:4:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5064:6:18",
                "type": ""
              }
            ],
            "src": "5031:283:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5387:265:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5492:22:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5494:16:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5494:18:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5494:18:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5464:6:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5472:18:18",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5461:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5461:30:18"
                  },
                  "nodeType": "YulIf",
                  "src": "5458:2:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5544:41:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5560:6:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5568:4:18",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5556:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5556:17:18"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5579:4:18",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5575:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5575:9:18"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5552:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5552:33:18"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5544:4:18"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5622:23:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5634:4:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5640:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5630:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5630:15:18"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5622:4:18"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5371:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5382:4:18",
                "type": ""
              }
            ],
            "src": "5320:332:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5717:40:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5728:22:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5744:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5738:5:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5738:12:18"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5728:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5700:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5710:6:18",
                "type": ""
              }
            ],
            "src": "5658:99:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5859:73:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5876:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5881:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5869:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5869:19:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5869:19:18"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5897:29:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5916:3:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5921:4:18",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5912:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5912:14:18"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "5897:11:18"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5831:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5836:6:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5847:11:18",
                "type": ""
              }
            ],
            "src": "5763:169:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5983:51:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5993:35:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6022:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6004:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6004:24:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5993:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5965:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5975:7:18",
                "type": ""
              }
            ],
            "src": "5938:96:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6082:48:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6092:32:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6117:5:18"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6110:6:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6110:13:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6103:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6103:21:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6092:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6064:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6074:7:18",
                "type": ""
              }
            ],
            "src": "6040:90:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6181:81:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6191:65:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6206:5:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6213:42:18",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6202:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6202:54:18"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6191:7:18"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6163:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6173:7:18",
                "type": ""
              }
            ],
            "src": "6136:126:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6352:90:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6362:74:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6430:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_GreenCertificate_$853_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6375:54:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6375:61:18"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6362:9:18"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_GreenCertificate_$853_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6332:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6342:9:18",
                "type": ""
              }
            ],
            "src": "6268:174:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6532:53:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6542:37:18",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6573:5:18"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6555:17:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6555:24:18"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6542:9:18"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_GreenCertificate_$853_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6512:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6522:9:18",
                "type": ""
              }
            ],
            "src": "6448:137:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6642:103:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "6665:3:18"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "6670:3:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6675:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "6652:12:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6652:30:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6652:30:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6723:3:18"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6728:6:18"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6719:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6719:16:18"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6737:1:18",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6712:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6712:27:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6712:27:18"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6624:3:18",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6629:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6634:6:18",
                "type": ""
              }
            ],
            "src": "6591:154:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6800:258:18",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6810:10:18",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6819:1:18",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6814:1:18",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6879:63:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6904:3:18"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6909:1:18"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6900:3:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6900:11:18"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6923:3:18"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6928:1:18"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6919:3:18"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6919:11:18"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6913:5:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6913:18:18"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6893:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6893:39:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6893:39:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6840:1:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6843:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6837:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6837:13:18"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6851:19:18",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6853:15:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6862:1:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6865:2:18",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6858:3:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6858:10:18"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6853:1:18"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6833:3:18",
                    "statements": []
                  },
                  "src": "6829:113:18"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6976:76:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7026:3:18"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7031:6:18"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7022:3:18"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7022:16:18"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7040:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7015:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7015:27:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7015:27:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6957:1:18"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6960:6:18"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6954:2:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6954:13:18"
                  },
                  "nodeType": "YulIf",
                  "src": "6951:2:18"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6782:3:18",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6787:3:18",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6792:6:18",
                "type": ""
              }
            ],
            "src": "6751:307:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7092:152:18",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7109:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7112:77:18",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7102:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7102:88:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7102:88:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7206:1:18",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7209:4:18",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7199:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7199:15:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7199:15:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7230:1:18",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7233:4:18",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7223:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7223:15:18"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7223:15:18"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7064:180:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7298:54:18",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7308:38:18",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7326:5:18"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7333:2:18",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7322:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7322:14:18"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7342:2:18",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7338:3:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7338:7:18"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7318:3:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7318:28:18"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "7308:6:18"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7281:5:18",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "7291:6:18",
                "type": ""
              }
            ],
            "src": "7250:102:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7401:79:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7458:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7467:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7470:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7460:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7460:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7460:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7424:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7449:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7431:17:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7431:24:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7421:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7421:35:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7414:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7414:43:18"
                  },
                  "nodeType": "YulIf",
                  "src": "7411:2:18"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7394:5:18",
                "type": ""
              }
            ],
            "src": "7358:122:18"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7526:76:18",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7580:16:18",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7589:1:18",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7592:1:18",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7582:6:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7582:12:18"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7582:12:18"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7549:5:18"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7571:5:18"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "7556:14:18"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7556:21:18"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7546:2:18"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7546:32:18"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7539:6:18"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7539:40:18"
                  },
                  "nodeType": "YulIf",
                  "src": "7536:2:18"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7519:5:18",
                "type": ""
              }
            ],
            "src": "7486:116:18"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_GreenCertificate_$853_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_GreenCertificate_$853_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n\n        mstore(add(pos, 0), \"Company is not certified\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_GreenCertificate_$853__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_GreenCertificate_$853_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_GreenCertificate_$853_to_t_address(value) -> converted {\n        converted := convert_t_contract$_GreenCertificate_$853_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_GreenCertificate_$853_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 18,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "144:1921:2:-:0;;;965:50;;;;;;;;;;998:10;989:6;;:19;;;;;;;;;;;;;;;;;;144:1921;;;;;;",
  "deployedSourceMap": "144:1921:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1021:743;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;673:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1770:293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;484:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;741:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:743;591:6;;;;;;;;;;577:20;;:10;:20;;;569:29;;;;;;1227:5:::1;1195:37;;:19;:28;1215:7;1195:28;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1192:358;;;1282:31;1337:7;1316:29;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1282:63;;1390:4;1359:19;:28;1379:7;1359:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;1438:14;1408:18;:27;1427:7;1408:27;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;1503:36;1524:14;1503:36;;;;;;:::i;:::-;;;;;;;;1192:358;;1596:28;1627:18;:27;1646:7;1627:27;;;;;;;;;;;;;;;;;;;;;;;;;1596:58;;1664:11;:22;;;1687:7;1664:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1713:38;1734:7;1743;1713:38;;;;;;;:::i;:::-;;;;;;;;608:1;1021:743:::0;;:::o;673:62::-;;;;;;;;;;;;;;;;;;;;;;:::o;1770:293::-;1851:4;1875:19;:28;1895:7;1875:28;;;;;;;;;;;;;;;;;;;;;;;;;1867:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1942:28;1973:18;:27;1992:7;1973:27;;;;;;;;;;;;;;;;;;;;;;;;;1942:58;;2017:11;:30;;;2048:7;2017:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2010:46;;;1770:293;;;;:::o;484:21::-;;;;;;;;;;;;:::o;741:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:344:18:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:139::-;;441:6;428:20;419:29;;457:33;484:5;457:33;:::i;:::-;409:87;;;;:::o;502:137::-;;587:6;581:13;572:22;;603:30;627:5;603:30;:::i;:::-;562:77;;;;:::o;659:273::-;;764:3;757:4;749:6;745:17;741:27;731:2;;782:1;779;772:12;731:2;822:6;809:20;847:79;922:3;914:6;907:4;899:6;895:17;847:79;:::i;:::-;838:88;;721:211;;;;;:::o;938:262::-;;1046:2;1034:9;1025:7;1021:23;1017:32;1014:2;;;1062:1;1059;1052:12;1014:2;1105:1;1130:53;1175:7;1166:6;1155:9;1151:22;1130:53;:::i;:::-;1120:63;;1076:117;1004:196;;;;:::o;1206:520::-;;;1341:2;1329:9;1320:7;1316:23;1312:32;1309:2;;;1357:1;1354;1347:12;1309:2;1400:1;1425:53;1470:7;1461:6;1450:9;1446:22;1425:53;:::i;:::-;1415:63;;1371:117;1555:2;1544:9;1540:18;1527:32;1586:18;1578:6;1575:30;1572:2;;;1618:1;1615;1608:12;1572:2;1646:63;1701:7;1692:6;1681:9;1677:22;1646:63;:::i;:::-;1636:73;;1498:221;1299:427;;;;;:::o;1732:278::-;;1848:2;1836:9;1827:7;1823:23;1819:32;1816:2;;;1864:1;1861;1854:12;1816:2;1907:1;1932:61;1985:7;1976:6;1965:9;1961:22;1932:61;:::i;:::-;1922:71;;1878:125;1806:204;;;;:::o;2016:118::-;2103:24;2121:5;2103:24;:::i;:::-;2098:3;2091:37;2081:53;;:::o;2140:109::-;2221:21;2236:5;2221:21;:::i;:::-;2216:3;2209:34;2199:50;;:::o;2255:179::-;2366:61;2421:5;2366:61;:::i;:::-;2361:3;2354:74;2344:90;;:::o;2440:364::-;;2556:39;2589:5;2556:39;:::i;:::-;2611:71;2675:6;2670:3;2611:71;:::i;:::-;2604:78;;2691:52;2736:6;2731:3;2724:4;2717:5;2713:16;2691:52;:::i;:::-;2768:29;2790:6;2768:29;:::i;:::-;2763:3;2759:39;2752:46;;2532:272;;;;;:::o;2810:322::-;;2973:67;3037:2;3032:3;2973:67;:::i;:::-;2966:74;;3070:26;3066:1;3061:3;3057:11;3050:47;3123:2;3118:3;3114:12;3107:19;;2956:176;;;:::o;3138:222::-;;3269:2;3258:9;3254:18;3246:26;;3282:71;3350:1;3339:9;3335:17;3326:6;3282:71;:::i;:::-;3236:124;;;;:::o;3366:423::-;;3545:2;3534:9;3530:18;3522:26;;3558:71;3626:1;3615:9;3611:17;3602:6;3558:71;:::i;:::-;3676:9;3670:4;3666:20;3661:2;3650:9;3646:18;3639:48;3704:78;3777:4;3768:6;3704:78;:::i;:::-;3696:86;;3512:277;;;;;:::o;3795:210::-;;3920:2;3909:9;3905:18;3897:26;;3933:65;3995:1;3984:9;3980:17;3971:6;3933:65;:::i;:::-;3887:118;;;;:::o;4011:270::-;;4166:2;4155:9;4151:18;4143:26;;4179:95;4271:1;4260:9;4256:17;4247:6;4179:95;:::i;:::-;4133:148;;;;:::o;4287:313::-;;4438:2;4427:9;4423:18;4415:26;;4487:9;4481:4;4477:20;4473:1;4462:9;4458:17;4451:47;4515:78;4588:4;4579:6;4515:78;:::i;:::-;4507:86;;4405:195;;;;:::o;4606:419::-;;4810:2;4799:9;4795:18;4787:26;;4859:9;4853:4;4849:20;4845:1;4834:9;4830:17;4823:47;4887:131;5013:4;4887:131;:::i;:::-;4879:139;;4777:248;;;:::o;5031:283::-;;5097:2;5091:9;5081:19;;5139:4;5131:6;5127:17;5246:6;5234:10;5231:22;5210:18;5198:10;5195:34;5192:62;5189:2;;;5257:18;;:::i;:::-;5189:2;5297:10;5293:2;5286:22;5071:243;;;;:::o;5320:332::-;;5472:18;5464:6;5461:30;5458:2;;;5494:18;;:::i;:::-;5458:2;5579:4;5575:9;5568:4;5560:6;5556:17;5552:33;5544:41;;5640:4;5634;5630:15;5622:23;;5387:265;;;:::o;5658:99::-;;5744:5;5738:12;5728:22;;5717:40;;;:::o;5763:169::-;;5881:6;5876:3;5869:19;5921:4;5916:3;5912:14;5897:29;;5859:73;;;;:::o;5938:96::-;;6004:24;6022:5;6004:24;:::i;:::-;5993:35;;5983:51;;;:::o;6040:90::-;;6117:5;6110:13;6103:21;6092:32;;6082:48;;;:::o;6136:126::-;;6213:42;6206:5;6202:54;6191:65;;6181:81;;;:::o;6268:174::-;;6375:61;6430:5;6375:61;:::i;:::-;6362:74;;6352:90;;;:::o;6448:137::-;;6555:24;6573:5;6555:24;:::i;:::-;6542:37;;6532:53;;;:::o;6591:154::-;6675:6;6670:3;6665;6652:30;6737:1;6728:6;6723:3;6719:16;6712:27;6642:103;;;:::o;6751:307::-;6819:1;6829:113;6843:6;6840:1;6837:13;6829:113;;;6928:1;6923:3;6919:11;6913:18;6909:1;6904:3;6900:11;6893:39;6865:2;6862:1;6858:10;6853:15;;6829:113;;;6960:6;6957:1;6954:13;6951:2;;;7040:1;7031:6;7026:3;7022:16;7015:27;6951:2;6800:258;;;;:::o;7064:180::-;7112:77;7109:1;7102:88;7209:4;7206:1;7199:15;7233:4;7230:1;7223:15;7250:102;;7342:2;7338:7;7333:2;7326:5;7322:14;7318:28;7308:38;;7298:54;;;:::o;7358:122::-;7431:24;7449:5;7431:24;:::i;:::-;7424:5;7421:35;7411:2;;7470:1;7467;7460:12;7411:2;7401:79;:::o;7486:116::-;7556:21;7571:5;7556:21;:::i;:::-;7549:5;7546:32;7536:2;;7592:1;7589;7582:12;7536:2;7526:76;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0;\n\nimport \"./GreenCertificate.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\ncontract GreenCertifier {\n    using Address for address;\n\n    // Event to be emmitted when a company certificate is created\n    event CompanyCertification(GreenCertificate certificate);\n\n    // Event to be emmitted when a project is added\n    event ProjectCertification(address company, string project);\n\n\n    // Owner of this contract\n    address public _owner;\n\n\n    // function modifier\n    modifier onlyOwner() {\n        require(msg.sender == _owner);\n        _;\n    }\n\n    // Maps company address to a green certificate\n    mapping(address => GreenCertificate) public _greenCertificates;\n    mapping(address => bool) public _certifiedCompanies;\n    // Two options for mapping\n    //mapping (uint256 => GreenCertificate) private _greenCertificates;\n    //mapping (uint256 => address) private _greenCertificates;\n\n    constructor() {\n        _owner = msg.sender;\n    }\n\n    function createCertificate(address company, string memory project) external onlyOwner {\n        // Create certificate for the company if it already does not exist\n        if(_certifiedCompanies[company] == false) {\n            // Create certificate\n            GreenCertificate newCertificate = new GreenCertificate(company);\n            _certifiedCompanies[company] = true;\n            _greenCertificates[company] = newCertificate;\n\n            // Create an event\n            emit CompanyCertification(newCertificate);\n        } \n\n        // Add project to the list\n        GreenCertificate certificate = _greenCertificates[company];\n        certificate.addProject(project);   \n        emit ProjectCertification(company, project);      \n    }\n\n    function isCertified(address company, string memory project) public view returns(bool) {\n        require(_certifiedCompanies[company], \"Company is not certified\");\n        GreenCertificate certificate = _greenCertificates[company];\n        return certificate.isCertifiedProject(project);\n    }\n}\n\n",
  "sourcePath": "/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertifier.sol",
  "ast": {
    "absolutePath": "/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertifier.sol",
    "exportedSymbols": {
      "Address": [
        2968
      ],
      "GreenCertificate": [
        853
      ],
      "GreenCertifier": [
        992
      ]
    },
    "id": 993,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 855,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:2"
      },
      {
        "absolutePath": "/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertificate.sol",
        "file": "./GreenCertificate.sol",
        "id": 856,
        "nodeType": "ImportDirective",
        "scope": 993,
        "sourceUnit": 854,
        "src": "58:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 857,
        "nodeType": "ImportDirective",
        "scope": 993,
        "sourceUnit": 2969,
        "src": "91:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          853
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 992,
        "linearizedBaseContracts": [
          992
        ],
        "name": "GreenCertifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 860,
            "libraryName": {
              "id": 858,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2968,
              "src": "180:7:2"
            },
            "nodeType": "UsingForDirective",
            "src": "174:26:2",
            "typeName": {
              "id": 859,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "192:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "anonymous": false,
            "id": 865,
            "name": "CompanyCertification",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 863,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "certificate",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "299:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GreenCertificate_$853",
                    "typeString": "contract GreenCertificate"
                  },
                  "typeName": {
                    "id": 862,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 861,
                      "name": "GreenCertificate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 853,
                      "src": "299:16:2"
                    },
                    "referencedDeclaration": 853,
                    "src": "299:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$853",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:30:2"
            },
            "src": "272:57:2"
          },
          {
            "anonymous": false,
            "id": 871,
            "name": "ProjectCertification",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 867,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "414:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 869,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "431:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "413:33:2"
            },
            "src": "387:60:2"
          },
          {
            "constant": false,
            "functionSelector": "b2bdfa7b",
            "id": 873,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 992,
            "src": "484:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 872,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "484:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 883,
              "nodeType": "Block",
              "src": "559:57:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 876,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "577:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "577:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 878,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 873,
                          "src": "591:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "577:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 875,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "569:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "569:29:2"
                },
                {
                  "id": 882,
                  "nodeType": "PlaceholderStatement",
                  "src": "608:1:2"
                }
              ]
            },
            "id": 884,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "556:2:2"
            },
            "src": "538:78:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "5a3987fe",
            "id": 889,
            "mutability": "mutable",
            "name": "_greenCertificates",
            "nodeType": "VariableDeclaration",
            "scope": 992,
            "src": "673:62:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$853_$",
              "typeString": "mapping(address => contract GreenCertificate)"
            },
            "typeName": {
              "id": 888,
              "keyType": {
                "id": 885,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "681:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "673:36:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$853_$",
                "typeString": "mapping(address => contract GreenCertificate)"
              },
              "valueType": {
                "id": 887,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 886,
                  "name": "GreenCertificate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 853,
                  "src": "692:16:2"
                },
                "referencedDeclaration": 853,
                "src": "692:16:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_GreenCertificate_$853",
                  "typeString": "contract GreenCertificate"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f755de72",
            "id": 893,
            "mutability": "mutable",
            "name": "_certifiedCompanies",
            "nodeType": "VariableDeclaration",
            "scope": 992,
            "src": "741:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 892,
              "keyType": {
                "id": 890,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "749:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "741:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 891,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "760:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 901,
              "nodeType": "Block",
              "src": "979:36:2",
              "statements": [
                {
                  "expression": {
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 896,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "989:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 897,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "998:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "998:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "989:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "989:19:2"
                }
              ]
            },
            "id": 902,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "976:2:2"
            },
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:0:2"
            },
            "scope": 992,
            "src": "965:50:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "1107:657:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 911,
                        "name": "_certifiedCompanies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 893,
                        "src": "1195:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 913,
                      "indexExpression": {
                        "id": 912,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "1215:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1195:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1227:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1195:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 942,
                  "nodeType": "IfStatement",
                  "src": "1192:358:2",
                  "trueBody": {
                    "id": 941,
                    "nodeType": "Block",
                    "src": "1234:316:2",
                    "statements": [
                      {
                        "assignments": [
                          918
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 918,
                            "mutability": "mutable",
                            "name": "newCertificate",
                            "nodeType": "VariableDeclaration",
                            "scope": 941,
                            "src": "1282:31:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$853",
                              "typeString": "contract GreenCertificate"
                            },
                            "typeName": {
                              "id": 917,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 916,
                                "name": "GreenCertificate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 853,
                                "src": "1282:16:2"
                              },
                              "referencedDeclaration": 853,
                              "src": "1282:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$853",
                                "typeString": "contract GreenCertificate"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 924,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 922,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "1337:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1316:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_GreenCertificate_$853_$",
                              "typeString": "function (address) returns (contract GreenCertificate)"
                            },
                            "typeName": {
                              "id": 920,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 919,
                                "name": "GreenCertificate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 853,
                                "src": "1320:16:2"
                              },
                              "referencedDeclaration": 853,
                              "src": "1320:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$853",
                                "typeString": "contract GreenCertificate"
                              }
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1316:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GreenCertificate_$853",
                            "typeString": "contract GreenCertificate"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1282:63:2"
                      },
                      {
                        "expression": {
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 925,
                              "name": "_certifiedCompanies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 893,
                              "src": "1359:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 927,
                            "indexExpression": {
                              "id": 926,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "1379:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1359:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1390:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1359:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 930,
                        "nodeType": "ExpressionStatement",
                        "src": "1359:35:2"
                      },
                      {
                        "expression": {
                          "id": 935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 931,
                              "name": "_greenCertificates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 889,
                              "src": "1408:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$853_$",
                                "typeString": "mapping(address => contract GreenCertificate)"
                              }
                            },
                            "id": 933,
                            "indexExpression": {
                              "id": 932,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "1427:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1408:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$853",
                              "typeString": "contract GreenCertificate"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 934,
                            "name": "newCertificate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 918,
                            "src": "1438:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$853",
                              "typeString": "contract GreenCertificate"
                            }
                          },
                          "src": "1408:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GreenCertificate_$853",
                            "typeString": "contract GreenCertificate"
                          }
                        },
                        "id": 936,
                        "nodeType": "ExpressionStatement",
                        "src": "1408:44:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 938,
                              "name": "newCertificate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 918,
                              "src": "1524:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$853",
                                "typeString": "contract GreenCertificate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GreenCertificate_$853",
                                "typeString": "contract GreenCertificate"
                              }
                            ],
                            "id": 937,
                            "name": "CompanyCertification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 865,
                            "src": "1503:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_GreenCertificate_$853_$returns$__$",
                              "typeString": "function (contract GreenCertificate)"
                            }
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1503:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 940,
                        "nodeType": "EmitStatement",
                        "src": "1498:41:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 945,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nodeType": "VariableDeclaration",
                      "scope": 961,
                      "src": "1596:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenCertificate_$853",
                        "typeString": "contract GreenCertificate"
                      },
                      "typeName": {
                        "id": 944,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 943,
                          "name": "GreenCertificate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 853,
                          "src": "1596:16:2"
                        },
                        "referencedDeclaration": 853,
                        "src": "1596:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$853",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 949,
                  "initialValue": {
                    "baseExpression": {
                      "id": 946,
                      "name": "_greenCertificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 889,
                      "src": "1627:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$853_$",
                        "typeString": "mapping(address => contract GreenCertificate)"
                      }
                    },
                    "id": 948,
                    "indexExpression": {
                      "id": 947,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 904,
                      "src": "1646:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1627:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$853",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1596:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 953,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "1687:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 950,
                        "name": "certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "1664:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$853",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addProject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 831,
                      "src": "1664:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1664:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 955,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:31:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 957,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "1734:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 958,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "1743:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 956,
                      "name": "ProjectCertification",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "1713:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1713:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 960,
                  "nodeType": "EmitStatement",
                  "src": "1708:43:2"
                }
              ]
            },
            "functionSelector": "00896eee",
            "id": 962,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 909,
                "modifierName": {
                  "id": 908,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 884,
                  "src": "1097:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1097:9:2"
              }
            ],
            "name": "createCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "1048:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "1065:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1047:40:2"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1107:0:2"
            },
            "scope": 992,
            "src": "1021:743:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 990,
              "nodeType": "Block",
              "src": "1857:206:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 972,
                          "name": "_certifiedCompanies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 893,
                          "src": "1875:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 974,
                        "indexExpression": {
                          "id": 973,
                          "name": "company",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 964,
                          "src": "1895:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1875:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d70616e79206973206e6f7420636572746966696564",
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1905:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc",
                          "typeString": "literal_string \"Company is not certified\""
                        },
                        "value": "Company is not certified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc",
                          "typeString": "literal_string \"Company is not certified\""
                        }
                      ],
                      "id": 971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1867:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:65:2"
                },
                {
                  "assignments": [
                    980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 980,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nodeType": "VariableDeclaration",
                      "scope": 990,
                      "src": "1942:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenCertificate_$853",
                        "typeString": "contract GreenCertificate"
                      },
                      "typeName": {
                        "id": 979,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 978,
                          "name": "GreenCertificate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 853,
                          "src": "1942:16:2"
                        },
                        "referencedDeclaration": 853,
                        "src": "1942:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$853",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 984,
                  "initialValue": {
                    "baseExpression": {
                      "id": 981,
                      "name": "_greenCertificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 889,
                      "src": "1973:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$853_$",
                        "typeString": "mapping(address => contract GreenCertificate)"
                      }
                    },
                    "id": 983,
                    "indexExpression": {
                      "id": 982,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "1992:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1973:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$853",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1942:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 987,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 966,
                        "src": "2048:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 985,
                        "name": "certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "2017:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$853",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isCertifiedProject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 852,
                      "src": "2017:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) view external returns (bool)"
                      }
                    },
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2017:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 970,
                  "id": 989,
                  "nodeType": "Return",
                  "src": "2010:46:2"
                }
              ]
            },
            "functionSelector": "6b3b848a",
            "id": 991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCertified",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 991,
                  "src": "1791:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 991,
                  "src": "1808:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1790:40:2"
            },
            "returnParameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 991,
                  "src": "1851:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1851:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1850:6:2"
            },
            "scope": 992,
            "src": "1770:293:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 993,
        "src": "144:1921:2"
      }
    ],
    "src": "32:2035:2"
  },
  "legacyAST": {
    "absolutePath": "/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertifier.sol",
    "exportedSymbols": {
      "Address": [
        2968
      ],
      "GreenCertificate": [
        853
      ],
      "GreenCertifier": [
        992
      ]
    },
    "id": 993,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 855,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:2"
      },
      {
        "absolutePath": "/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertificate.sol",
        "file": "./GreenCertificate.sol",
        "id": 856,
        "nodeType": "ImportDirective",
        "scope": 993,
        "sourceUnit": 854,
        "src": "58:32:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 857,
        "nodeType": "ImportDirective",
        "scope": 993,
        "sourceUnit": 2969,
        "src": "91:51:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          853
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 992,
        "linearizedBaseContracts": [
          992
        ],
        "name": "GreenCertifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 860,
            "libraryName": {
              "id": 858,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2968,
              "src": "180:7:2"
            },
            "nodeType": "UsingForDirective",
            "src": "174:26:2",
            "typeName": {
              "id": 859,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "192:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "anonymous": false,
            "id": 865,
            "name": "CompanyCertification",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 863,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "certificate",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "299:28:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GreenCertificate_$853",
                    "typeString": "contract GreenCertificate"
                  },
                  "typeName": {
                    "id": 862,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 861,
                      "name": "GreenCertificate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 853,
                      "src": "299:16:2"
                    },
                    "referencedDeclaration": 853,
                    "src": "299:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$853",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:30:2"
            },
            "src": "272:57:2"
          },
          {
            "anonymous": false,
            "id": 871,
            "name": "ProjectCertification",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 867,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "414:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 869,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 871,
                  "src": "431:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 868,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "413:33:2"
            },
            "src": "387:60:2"
          },
          {
            "constant": false,
            "functionSelector": "b2bdfa7b",
            "id": 873,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 992,
            "src": "484:21:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 872,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "484:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 883,
              "nodeType": "Block",
              "src": "559:57:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 876,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "577:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "577:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 878,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 873,
                          "src": "591:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "577:20:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 875,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "569:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 881,
                  "nodeType": "ExpressionStatement",
                  "src": "569:29:2"
                },
                {
                  "id": 882,
                  "nodeType": "PlaceholderStatement",
                  "src": "608:1:2"
                }
              ]
            },
            "id": 884,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "556:2:2"
            },
            "src": "538:78:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "5a3987fe",
            "id": 889,
            "mutability": "mutable",
            "name": "_greenCertificates",
            "nodeType": "VariableDeclaration",
            "scope": 992,
            "src": "673:62:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$853_$",
              "typeString": "mapping(address => contract GreenCertificate)"
            },
            "typeName": {
              "id": 888,
              "keyType": {
                "id": 885,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "681:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "673:36:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$853_$",
                "typeString": "mapping(address => contract GreenCertificate)"
              },
              "valueType": {
                "id": 887,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 886,
                  "name": "GreenCertificate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 853,
                  "src": "692:16:2"
                },
                "referencedDeclaration": 853,
                "src": "692:16:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_GreenCertificate_$853",
                  "typeString": "contract GreenCertificate"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f755de72",
            "id": 893,
            "mutability": "mutable",
            "name": "_certifiedCompanies",
            "nodeType": "VariableDeclaration",
            "scope": 992,
            "src": "741:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 892,
              "keyType": {
                "id": 890,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "749:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "741:24:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 891,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "760:4:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 901,
              "nodeType": "Block",
              "src": "979:36:2",
              "statements": [
                {
                  "expression": {
                    "id": 899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 896,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 873,
                      "src": "989:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 897,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "998:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "998:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "989:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 900,
                  "nodeType": "ExpressionStatement",
                  "src": "989:19:2"
                }
              ]
            },
            "id": 902,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "976:2:2"
            },
            "returnParameters": {
              "id": 895,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:0:2"
            },
            "scope": 992,
            "src": "965:50:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 961,
              "nodeType": "Block",
              "src": "1107:657:2",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 911,
                        "name": "_certifiedCompanies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 893,
                        "src": "1195:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 913,
                      "indexExpression": {
                        "id": 912,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "1215:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1195:28:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 914,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1227:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1195:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 942,
                  "nodeType": "IfStatement",
                  "src": "1192:358:2",
                  "trueBody": {
                    "id": 941,
                    "nodeType": "Block",
                    "src": "1234:316:2",
                    "statements": [
                      {
                        "assignments": [
                          918
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 918,
                            "mutability": "mutable",
                            "name": "newCertificate",
                            "nodeType": "VariableDeclaration",
                            "scope": 941,
                            "src": "1282:31:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$853",
                              "typeString": "contract GreenCertificate"
                            },
                            "typeName": {
                              "id": 917,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 916,
                                "name": "GreenCertificate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 853,
                                "src": "1282:16:2"
                              },
                              "referencedDeclaration": 853,
                              "src": "1282:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$853",
                                "typeString": "contract GreenCertificate"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 924,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 922,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "1337:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 921,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1316:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_GreenCertificate_$853_$",
                              "typeString": "function (address) returns (contract GreenCertificate)"
                            },
                            "typeName": {
                              "id": 920,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 919,
                                "name": "GreenCertificate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 853,
                                "src": "1320:16:2"
                              },
                              "referencedDeclaration": 853,
                              "src": "1320:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$853",
                                "typeString": "contract GreenCertificate"
                              }
                            }
                          },
                          "id": 923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1316:29:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GreenCertificate_$853",
                            "typeString": "contract GreenCertificate"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1282:63:2"
                      },
                      {
                        "expression": {
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 925,
                              "name": "_certifiedCompanies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 893,
                              "src": "1359:19:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 927,
                            "indexExpression": {
                              "id": 926,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "1379:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1359:28:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1390:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1359:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 930,
                        "nodeType": "ExpressionStatement",
                        "src": "1359:35:2"
                      },
                      {
                        "expression": {
                          "id": 935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 931,
                              "name": "_greenCertificates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 889,
                              "src": "1408:18:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$853_$",
                                "typeString": "mapping(address => contract GreenCertificate)"
                              }
                            },
                            "id": 933,
                            "indexExpression": {
                              "id": 932,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "1427:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1408:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$853",
                              "typeString": "contract GreenCertificate"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 934,
                            "name": "newCertificate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 918,
                            "src": "1438:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$853",
                              "typeString": "contract GreenCertificate"
                            }
                          },
                          "src": "1408:44:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GreenCertificate_$853",
                            "typeString": "contract GreenCertificate"
                          }
                        },
                        "id": 936,
                        "nodeType": "ExpressionStatement",
                        "src": "1408:44:2"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 938,
                              "name": "newCertificate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 918,
                              "src": "1524:14:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$853",
                                "typeString": "contract GreenCertificate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GreenCertificate_$853",
                                "typeString": "contract GreenCertificate"
                              }
                            ],
                            "id": 937,
                            "name": "CompanyCertification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 865,
                            "src": "1503:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_GreenCertificate_$853_$returns$__$",
                              "typeString": "function (contract GreenCertificate)"
                            }
                          },
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1503:36:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 940,
                        "nodeType": "EmitStatement",
                        "src": "1498:41:2"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 945,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nodeType": "VariableDeclaration",
                      "scope": 961,
                      "src": "1596:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenCertificate_$853",
                        "typeString": "contract GreenCertificate"
                      },
                      "typeName": {
                        "id": 944,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 943,
                          "name": "GreenCertificate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 853,
                          "src": "1596:16:2"
                        },
                        "referencedDeclaration": 853,
                        "src": "1596:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$853",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 949,
                  "initialValue": {
                    "baseExpression": {
                      "id": 946,
                      "name": "_greenCertificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 889,
                      "src": "1627:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$853_$",
                        "typeString": "mapping(address => contract GreenCertificate)"
                      }
                    },
                    "id": 948,
                    "indexExpression": {
                      "id": 947,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 904,
                      "src": "1646:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1627:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$853",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1596:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 953,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "1687:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 950,
                        "name": "certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 945,
                        "src": "1664:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$853",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addProject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 831,
                      "src": "1664:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1664:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 955,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:31:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 957,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 904,
                        "src": "1734:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 958,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 906,
                        "src": "1743:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 956,
                      "name": "ProjectCertification",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "1713:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1713:38:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 960,
                  "nodeType": "EmitStatement",
                  "src": "1708:43:2"
                }
              ]
            },
            "functionSelector": "00896eee",
            "id": 962,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 909,
                "modifierName": {
                  "id": 908,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 884,
                  "src": "1097:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1097:9:2"
              }
            ],
            "name": "createCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 904,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "1048:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 906,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 962,
                  "src": "1065:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 905,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1047:40:2"
            },
            "returnParameters": {
              "id": 910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1107:0:2"
            },
            "scope": 992,
            "src": "1021:743:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 990,
              "nodeType": "Block",
              "src": "1857:206:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 972,
                          "name": "_certifiedCompanies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 893,
                          "src": "1875:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 974,
                        "indexExpression": {
                          "id": 973,
                          "name": "company",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 964,
                          "src": "1895:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1875:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d70616e79206973206e6f7420636572746966696564",
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1905:26:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc",
                          "typeString": "literal_string \"Company is not certified\""
                        },
                        "value": "Company is not certified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc",
                          "typeString": "literal_string \"Company is not certified\""
                        }
                      ],
                      "id": 971,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1867:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 977,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:65:2"
                },
                {
                  "assignments": [
                    980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 980,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nodeType": "VariableDeclaration",
                      "scope": 990,
                      "src": "1942:28:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenCertificate_$853",
                        "typeString": "contract GreenCertificate"
                      },
                      "typeName": {
                        "id": 979,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 978,
                          "name": "GreenCertificate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 853,
                          "src": "1942:16:2"
                        },
                        "referencedDeclaration": 853,
                        "src": "1942:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$853",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 984,
                  "initialValue": {
                    "baseExpression": {
                      "id": 981,
                      "name": "_greenCertificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 889,
                      "src": "1973:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$853_$",
                        "typeString": "mapping(address => contract GreenCertificate)"
                      }
                    },
                    "id": 983,
                    "indexExpression": {
                      "id": 982,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "1992:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1973:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$853",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1942:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 987,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 966,
                        "src": "2048:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 985,
                        "name": "certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 980,
                        "src": "2017:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$853",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isCertifiedProject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 852,
                      "src": "2017:30:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) view external returns (bool)"
                      }
                    },
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2017:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 970,
                  "id": 989,
                  "nodeType": "Return",
                  "src": "2010:46:2"
                }
              ]
            },
            "functionSelector": "6b3b848a",
            "id": 991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCertified",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 991,
                  "src": "1791:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 963,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 991,
                  "src": "1808:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1790:40:2"
            },
            "returnParameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 969,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 991,
                  "src": "1851:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1851:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1850:6:2"
            },
            "scope": 992,
            "src": "1770:293:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 993,
        "src": "144:1921:2"
      }
    ],
    "src": "32:2035:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x32351c8224c460CAE1a4A37Bd2De4C4d6cC7CA0F",
      "transactionHash": "0x9992b2b7fcff5aa6f9c071a3a35d16f003f93ca73511780d1fc0ccab35446bde"
    },
    "1624527601382": {
      "events": {},
      "links": {},
      "address": "0xDfB2A058A5f5af0f31e3F1038b7C262f4DA4713a",
      "transactionHash": "0x1a3312e6097eb896c10748852ee5a44ff1ccdf1441a4b7b622897bf582078496"
    },
    "1624528216588": {
      "events": {},
      "links": {},
      "address": "0x06f55661D01C8cE2a9cd43aA11400e2463C81763",
      "transactionHash": "0x4d13b0d9c8b3f8f55f644da56aee9f2be99a6a62a1c6f747a78aa9e09a1d791e"
    },
    "1624528952186": {
      "events": {},
      "links": {},
      "address": "0x65eB77fa6F912d73be33823b2827b70AabDD94A9",
      "transactionHash": "0xd0032c118f2e9d471a1d7fa2b066736f95f775be4b1954f150d54b2f74dcd4ab"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-06-25T13:06:51.612Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}