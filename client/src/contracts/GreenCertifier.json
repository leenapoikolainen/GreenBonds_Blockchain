{
  "contractName": "GreenCertifier",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract GreenCertificate",
          "name": "certificate",
          "type": "address"
        }
      ],
      "name": "CompanyCertification",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "company",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "project",
          "type": "string"
        }
      ],
      "name": "ProjectCertification",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_certifiedCompanies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_greenCertificates",
      "outputs": [
        {
          "internalType": "contract GreenCertificate",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "company",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "project",
          "type": "string"
        }
      ],
      "name": "createCertificate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "company",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "project",
          "type": "string"
        }
      ],
      "name": "isCertified",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract GreenCertificate\",\"name\":\"certificate\",\"type\":\"address\"}],\"name\":\"CompanyCertification\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"ProjectCertification\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_certifiedCompanies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_greenCertificates\",\"outputs\":[{\"internalType\":\"contract GreenCertificate\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"createCertificate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"company\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"project\",\"type\":\"string\"}],\"name\":\"isCertified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertifier.sol\":\"GreenCertifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertificate.sol\":{\"keccak256\":\"0x2c6a2383993c07277476437f22c321a39ddf72d3e3503b7045ae5903ac6b61f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7157f79faaad9b1b0fcd5a3ba49c608a80fa3ae0542f05eb6db9b4ad80aee1a4\",\"dweb:/ipfs/QmUo7DNnzWTTa2gVwWV9pUdhES2bLE622yryn6aprHne3G\"]},\"/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertifier.sol\":{\"keccak256\":\"0x6e5b4e30e6f1f83f69bb73eae1d91d6b87e8adec2ce316d24ee1b62e01957789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://931c76abc6ac0ca1913998d8165c6d22f452ea0793ec489bc663500d96ae0c88\",\"dweb:/ipfs/QmSiPzg5THFBQduH82sqf9mGm3pDm7B1t3W3ccF9xiM17W\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100565760003560e01c8062896eee1461005b5780635a3987fe146100775780636b3b848a146100a7578063b2bdfa7b146100d7578063f755de72146100f5575b600080fd5b610075600480360381019061007091906106ed565b610125565b005b610091600480360381019061008c91906106c4565b61042a565b60405161009e9190610876565b60405180910390f35b6100c160048036038101906100bc91906106ed565b61045d565b6040516100ce919061085b565b60405180910390f35b6100df6105e1565b6040516100ec9190610810565b60405180910390f35b61010f600480360381019061010a91906106c4565b610605565b60405161011c919061085b565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461017d57600080fd5b60001515600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515141561031d576000826040516101e590610625565b6101ef9190610810565b604051809103906000f08015801561020b573d6000803e3d6000fd5b5090506001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd74aba97929f9c483acd3c361751a46ee8ef31b85336dec91f503d695dab6df1816040516103139190610876565b60405180910390a1505b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff16630ed047d4836040518263ffffffff1660e01b81526004016103ba9190610891565b600060405180830381600087803b1580156103d457600080fd5b505af11580156103e8573d6000803e3d6000fd5b505050507f7290139a1d883a1284fc3550b1ca8c453f0520aa22089656d30587b014cb69fb838360405161041d92919061082b565b60405180910390a1505050565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e2906108b3565b60405180910390fd5b6000600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff1663ffa67370846040518263ffffffff1660e01b81526004016105889190610891565b60206040518083038186803b1580156105a057600080fd5b505afa1580156105b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d89190610741565b91505092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915054906101000a900460ff1681565b610a2180610a6383390190565b600061064561064084610904565b6108d3565b90508281526020810184848401111561065d57600080fd5b6106688482856109b2565b509392505050565b60008135905061067f81610a34565b92915050565b60008151905061069481610a4b565b92915050565b600082601f8301126106ab57600080fd5b81356106bb848260208601610632565b91505092915050565b6000602082840312156106d657600080fd5b60006106e484828501610670565b91505092915050565b6000806040838503121561070057600080fd5b600061070e85828601610670565b925050602083013567ffffffffffffffff81111561072b57600080fd5b6107378582860161069a565b9150509250929050565b60006020828403121561075357600080fd5b600061076184828501610685565b91505092915050565b61077381610950565b82525050565b61078281610962565b82525050565b6107918161098e565b82525050565b60006107a282610934565b6107ac818561093f565b93506107bc8185602086016109c1565b6107c581610a23565b840191505092915050565b60006107dd60188361093f565b91507f436f6d70616e79206973206e6f742063657274696669656400000000000000006000830152602082019050919050565b6000602082019050610825600083018461076a565b92915050565b6000604082019050610840600083018561076a565b81810360208301526108528184610797565b90509392505050565b60006020820190506108706000830184610779565b92915050565b600060208201905061088b6000830184610788565b92915050565b600060208201905081810360008301526108ab8184610797565b905092915050565b600060208201905081810360008301526108cc816107d0565b9050919050565b6000604051905081810181811067ffffffffffffffff821117156108fa576108f96109f4565b5b8060405250919050565b600067ffffffffffffffff82111561091f5761091e6109f4565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600061095b8261096e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610999826109a0565b9050919050565b60006109ab8261096e565b9050919050565b82818337600083830152505050565b60005b838110156109df5780820151818401526020810190506109c4565b838111156109ee576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b610a3d81610950565b8114610a4857600080fd5b50565b610a5481610962565b8114610a5f57600080fd5b5056fe608060405234801561001057600080fd5b50604051610a21380380610a21833981810160405281019061003291906100ce565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610140565b6000815190506100c881610129565b92915050565b6000602082840312156100e057600080fd5b60006100ee848285016100b9565b91505092915050565b600061010282610109565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610132816100f7565b811461013d57600080fd5b50565b6108d28061014f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063abb2c89e1161005b578063abb2c89e14610101578063b13564881461011d578063b2bdfa7b1461013b578063ffa673701461015957610088565b80630ed047d41461008d578063127810bc146100a9578063195199f6146100c7578063a4e2a16e146100e3575b600080fd5b6100a760048036038101906100a291906104f2565b610189565b005b6100b1610254565b6040516100be9190610670565b60405180910390f35b6100e160048036038101906100dc9190610533565b61027e565b005b6100eb610323565b6040516100f89190610670565b60405180910390f35b61011b600480360381019061011691906104f2565b610349565b005b610125610412565b6040516101329190610718565b60405180910390f35b61014361041c565b6040516101509190610670565b60405180910390f35b610173600480360381019061016e91906104f2565b610440565b604051610180919061068b565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101e157600080fd5b60016003826040516101f39190610659565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507fc3a59c359d661d36347756321a82bedb654fea0beb523f9ae032f5c31190aefa81426040516102499291906106c8565b60405180910390a150565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102d657600080fd5b42811015610319576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610310906106f8565b60405180910390fd5b8060028190555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a157600080fd5b60006003826040516103b39190610659565b908152602001604051809103902060006101000a81548160ff0219169083151502179055507fe38cb434cb7b037ee92b51fc4e5c80fd2986d179adfd3c2537d5a886e537b62f8160405161040791906106a6565b60405180910390a150565b6000600254905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006003826040516104529190610659565b908152602001604051809103902060009054906101000a900460ff169050919050565b600061048861048384610764565b610733565b9050828152602081018484840111156104a057600080fd5b6104ab848285610803565b509392505050565b600082601f8301126104c457600080fd5b81356104d4848260208601610475565b91505092915050565b6000813590506104ec81610885565b92915050565b60006020828403121561050457600080fd5b600082013567ffffffffffffffff81111561051e57600080fd5b61052a848285016104b3565b91505092915050565b60006020828403121561054557600080fd5b6000610553848285016104dd565b91505092915050565b610565816107bb565b82525050565b610574816107cd565b82525050565b600061058582610794565b61058f818561079f565b935061059f818560208601610812565b6105a881610874565b840191505092915050565b60006105be82610794565b6105c881856107b0565b93506105d8818560208601610812565b80840191505092915050565b60006105f160248361079f565b91507f446561646c696e652074696d65206973206265666f72652063757272656e742060008301527f74696d65000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610653816107f9565b82525050565b600061066582846105b3565b915081905092915050565b6000602082019050610685600083018461055c565b92915050565b60006020820190506106a0600083018461056b565b92915050565b600060208201905081810360008301526106c0818461057a565b905092915050565b600060408201905081810360008301526106e2818561057a565b90506106f1602083018461064a565b9392505050565b60006020820190508181036000830152610711816105e4565b9050919050565b600060208201905061072d600083018461064a565b92915050565b6000604051905081810181811067ffffffffffffffff8211171561075a57610759610845565b5b8060405250919050565b600067ffffffffffffffff82111561077f5761077e610845565b5b601f19601f8301169050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b60006107c6826107d9565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610830578082015181840152602081019050610815565b8381111561083f576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61088e816107f9565b811461089957600080fd5b5056fea26469706673582212203f1c47e4da53492a6abc8ad1a6b91d10f40e0739c984b5d1a64566b64b21f67364736f6c63430008000033a2646970667358221220b8ab771c7c24bb62f5161375afb3bf3139fe7a71bdb437598ed046859878d51264736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7612:15",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "91:260:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "101:74:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "125:41:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:49:15"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "110:14:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "110:65:15"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "191:5:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "198:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "184:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "184:21:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "184:21:15"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "214:27:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "229:5:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "236:4:15",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "225:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "225:16:15"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "218:3:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "279:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "288:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "291:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "281:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "281:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "281:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "260:3:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "265:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:16:15"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "274:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "253:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "253:25:15"
                  },
                  "nodeType": "YulIf",
                  "src": "250:2:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "328:3:15"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "333:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "338:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "copy_calldata_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "304:23:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:41:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "304:41:15"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "64:3:15",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "69:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "77:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "85:5:15",
                "type": ""
              }
            ],
            "src": "7:344:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "409:87:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "419:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "441:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "428:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "428:20:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "419:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "484:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "457:26:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:33:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "457:33:15"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "387:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "395:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "403:5:15",
                "type": ""
              }
            ],
            "src": "357:139:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "562:77:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "572:22:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "587:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "581:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "581:13:15"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "572:5:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "627:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "603:23:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "603:30:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "603:30:15"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "540:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "548:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "556:5:15",
                "type": ""
              }
            ],
            "src": "502:137:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "721:211:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "770:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "779:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "782:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "772:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "772:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "772:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "749:6:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "757:4:15",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "745:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "745:17:15"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "764:3:15"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "741:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "741:27:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "734:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "734:35:15"
                  },
                  "nodeType": "YulIf",
                  "src": "731:2:15"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "795:34:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "822:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "809:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "809:20:15"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "799:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "838:88:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "899:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "907:4:15",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "895:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "895:17:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "914:6:15"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "922:3:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "847:47:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "847:79:15"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "838:5:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "699:6:15",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "707:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "715:5:15",
                "type": ""
              }
            ],
            "src": "659:273:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1004:196:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1050:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1059:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1062:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1052:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1052:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1052:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1025:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1034:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1021:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1021:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1046:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1017:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1017:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1014:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1076:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1091:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1105:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1095:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1120:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1155:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1166:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1151:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1151:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1175:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1130:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1130:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1120:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "974:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "985:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "997:6:15",
                "type": ""
              }
            ],
            "src": "938:262:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1299:427:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1345:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1354:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1357:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1347:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1347:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1347:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1320:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1329:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1316:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1316:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1341:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1312:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1312:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1309:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1371:117:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1386:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1400:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1390:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1415:63:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1450:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1461:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1446:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1446:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1470:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1425:20:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1425:53:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1415:6:15"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1498:221:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1513:46:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1544:9:15"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1555:2:15",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1540:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1540:18:15"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1527:12:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1527:32:15"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1517:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1606:16:15",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1615:1:15",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1618:1:15",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1608:6:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1608:12:15"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1608:12:15"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1578:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1586:18:15",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1575:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1575:30:15"
                      },
                      "nodeType": "YulIf",
                      "src": "1572:2:15"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1636:73:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1681:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1692:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1677:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1677:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1701:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "1646:30:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1646:63:15"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1636:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1261:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1272:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1284:6:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1292:6:15",
                "type": ""
              }
            ],
            "src": "1206:520:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1806:204:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1852:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1861:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1864:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1854:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1854:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1854:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1827:7:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1836:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1823:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1823:23:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1848:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1819:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1819:32:15"
                  },
                  "nodeType": "YulIf",
                  "src": "1816:2:15"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1878:125:15",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1893:15:15",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1907:1:15",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1897:6:15",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1922:71:15",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1965:9:15"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1976:6:15"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1961:3:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1961:22:15"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1985:7:15"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1932:28:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1932:61:15"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1922:6:15"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1776:9:15",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1787:7:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1799:6:15",
                "type": ""
              }
            ],
            "src": "1732:278:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2081:53:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2098:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2121:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2103:17:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2103:24:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2091:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2091:37:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2091:37:15"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2069:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2076:3:15",
                "type": ""
              }
            ],
            "src": "2016:118:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2199:50:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2216:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2236:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "2221:14:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2221:21:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2209:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2209:34:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2209:34:15"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2187:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2194:3:15",
                "type": ""
              }
            ],
            "src": "2140:109:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2345:91:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2362:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2423:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_GreenCertificate_$1428_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2367:55:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2367:62:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2355:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2355:75:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2355:75:15"
                }
              ]
            },
            "name": "abi_encode_t_contract$_GreenCertificate_$1428_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2333:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2340:3:15",
                "type": ""
              }
            ],
            "src": "2255:181:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2534:272:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2544:53:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2591:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2558:32:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2558:39:15"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2548:6:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2606:78:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2672:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2677:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2613:58:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2613:71:15"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2606:3:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2719:5:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2726:4:15",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2715:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2715:16:15"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2733:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2738:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2693:21:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2693:52:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2693:52:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2754:46:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2765:3:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2792:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2770:21:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2770:29:15"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2761:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2761:39:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2754:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2515:5:15",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2522:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2530:3:15",
                "type": ""
              }
            ],
            "src": "2442:364:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2958:176:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2968:74:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3034:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3039:2:15",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2975:58:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2975:67:15"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2968:3:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3063:3:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3068:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3059:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3059:11:15"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3072:26:15",
                        "type": "",
                        "value": "Company is not certified"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3052:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3052:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3052:47:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3109:19:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3120:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3125:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3116:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3116:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3109:3:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2946:3:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2954:3:15",
                "type": ""
              }
            ],
            "src": "2812:322:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3238:124:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3248:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3260:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3271:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3256:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3256:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3248:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3328:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3341:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3352:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3337:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3337:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3284:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3284:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3284:71:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3210:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3222:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3233:4:15",
                "type": ""
              }
            ],
            "src": "3140:222:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3514:277:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3524:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3536:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3547:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3532:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3532:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3524:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3604:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3617:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3628:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3613:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3613:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3560:43:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3560:71:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3560:71:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3652:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3663:2:15",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3648:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3648:18:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3672:4:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3678:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3668:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3668:20:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3641:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3641:48:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3641:48:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3698:86:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3770:6:15"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3779:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3706:63:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3706:78:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3698:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3478:9:15",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3490:6:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3498:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3509:4:15",
                "type": ""
              }
            ],
            "src": "3368:423:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3889:118:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3899:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3911:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3922:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3907:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3907:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3899:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3973:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3986:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3997:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3982:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3982:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3935:37:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3935:65:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3935:65:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3861:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3873:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3884:4:15",
                "type": ""
              }
            ],
            "src": "3797:210:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4136:149:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4146:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4158:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4169:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4154:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4154:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4146:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4251:6:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4264:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4275:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4260:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4260:17:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_GreenCertificate_$1428_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4182:68:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4182:96:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4182:96:15"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_GreenCertificate_$1428__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4108:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4120:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4131:4:15",
                "type": ""
              }
            ],
            "src": "4013:272:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4409:195:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4419:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4431:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4442:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4427:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4427:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4419:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4466:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4477:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4462:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4462:17:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4485:4:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4491:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4481:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4481:20:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4455:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4455:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4455:47:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4511:86:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4583:6:15"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4592:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4519:63:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4519:78:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4511:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4381:9:15",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4393:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4404:4:15",
                "type": ""
              }
            ],
            "src": "4291:313:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4781:248:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4791:26:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4803:9:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4814:2:15",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4799:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4799:18:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4791:4:15"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4838:9:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4849:1:15",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4834:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4834:17:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4857:4:15"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4863:9:15"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4853:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4853:20:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4827:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4827:47:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4827:47:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4883:139:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5017:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4891:124:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4891:131:15"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4883:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4761:9:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4776:4:15",
                "type": ""
              }
            ],
            "src": "4610:419:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5075:243:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5085:19:15",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5101:2:15",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5095:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5095:9:15"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "5085:6:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5113:35:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "5135:6:15"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5143:4:15"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5131:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5131:17:15"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "5117:10:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5259:22:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5261:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5261:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5261:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5202:10:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5214:18:15",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "5199:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5199:34:15"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "5238:10:15"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5250:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "5235:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5235:22:15"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "5196:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5196:62:15"
                  },
                  "nodeType": "YulIf",
                  "src": "5193:2:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5297:2:15",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "5301:10:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5290:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5290:22:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5290:22:15"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5059:4:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5068:6:15",
                "type": ""
              }
            ],
            "src": "5035:283:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5391:265:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5496:22:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "5498:16:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5498:18:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5498:18:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5468:6:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5476:18:15",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5465:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5465:30:15"
                  },
                  "nodeType": "YulIf",
                  "src": "5462:2:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5548:41:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "5564:6:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5572:4:15",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5560:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5560:17:15"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5583:4:15",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5579:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5579:9:15"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5556:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5556:33:15"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5548:4:15"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5626:23:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "5638:4:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5644:4:15",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5634:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5634:15:15"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "5626:4:15"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5375:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "5386:4:15",
                "type": ""
              }
            ],
            "src": "5324:332:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5721:40:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5732:22:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5748:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5742:5:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5742:12:15"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "5732:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5704:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5714:6:15",
                "type": ""
              }
            ],
            "src": "5662:99:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5863:73:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5880:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5885:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5873:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5873:19:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5873:19:15"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5901:29:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5920:3:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5925:4:15",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5916:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5916:14:15"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "5901:11:15"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5835:3:15",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5840:6:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5851:11:15",
                "type": ""
              }
            ],
            "src": "5767:169:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5987:51:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5997:35:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6026:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6008:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6008:24:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5997:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5969:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5979:7:15",
                "type": ""
              }
            ],
            "src": "5942:96:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6086:48:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6096:32:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6121:5:15"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "6114:6:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6114:13:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6107:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6107:21:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6096:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6068:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6078:7:15",
                "type": ""
              }
            ],
            "src": "6044:90:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6185:81:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6195:65:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6210:5:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6217:42:15",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "6206:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6206:54:15"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "6195:7:15"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6167:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "6177:7:15",
                "type": ""
              }
            ],
            "src": "6140:126:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6357:91:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6367:75:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6436:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_GreenCertificate_$1428_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6380:55:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6380:62:15"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6367:9:15"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_GreenCertificate_$1428_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6337:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6347:9:15",
                "type": ""
              }
            ],
            "src": "6272:176:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6539:53:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6549:37:15",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6580:5:15"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6562:17:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6562:24:15"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6549:9:15"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_GreenCertificate_$1428_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6519:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6529:9:15",
                "type": ""
              }
            ],
            "src": "6454:138:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6649:103:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "6672:3:15"
                      },
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "6677:3:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6682:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "6659:12:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6659:30:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6659:30:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "6730:3:15"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6735:6:15"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6726:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6726:16:15"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6744:1:15",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6719:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6719:27:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6719:27:15"
                }
              ]
            },
            "name": "copy_calldata_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6631:3:15",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6636:3:15",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6641:6:15",
                "type": ""
              }
            ],
            "src": "6598:154:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6807:258:15",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6817:10:15",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "6826:1:15",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "6821:1:15",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6886:63:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "6911:3:15"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "6916:1:15"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "6907:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6907:11:15"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6930:3:15"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "6935:1:15"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6926:3:15"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6926:11:15"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "6920:5:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6920:18:15"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6900:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6900:39:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6900:39:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6847:1:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6850:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "6844:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6844:13:15"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "6858:19:15",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "6860:15:15",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "6869:1:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6872:2:15",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "6865:3:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6865:10:15"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "6860:1:15"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "6840:3:15",
                    "statements": []
                  },
                  "src": "6836:113:15"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6983:76:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7033:3:15"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7038:6:15"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7029:3:15"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7029:16:15"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7047:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7022:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7022:27:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7022:27:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "6964:1:15"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6967:6:15"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6961:2:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6961:13:15"
                  },
                  "nodeType": "YulIf",
                  "src": "6958:2:15"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "6789:3:15",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "6794:3:15",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "6799:6:15",
                "type": ""
              }
            ],
            "src": "6758:307:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7099:152:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7116:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7119:77:15",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7109:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7109:88:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7109:88:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7213:1:15",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7216:4:15",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7206:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7206:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7206:15:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7237:1:15",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7240:4:15",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7230:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7230:15:15"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7230:15:15"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "7071:180:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7305:54:15",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7315:38:15",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7333:5:15"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7340:2:15",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7329:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7329:14:15"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7349:2:15",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "7345:3:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7345:7:15"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7325:3:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7325:28:15"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "7315:6:15"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7288:5:15",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "7298:6:15",
                "type": ""
              }
            ],
            "src": "7257:102:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7408:79:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7465:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7474:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7477:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7467:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7467:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7467:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7431:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7456:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "7438:17:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7438:24:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7428:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7428:35:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7421:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7421:43:15"
                  },
                  "nodeType": "YulIf",
                  "src": "7418:2:15"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7401:5:15",
                "type": ""
              }
            ],
            "src": "7365:122:15"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7533:76:15",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7587:16:15",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7596:1:15",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7599:1:15",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7589:6:15"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7589:12:15"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7589:12:15"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "7556:5:15"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7578:5:15"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "7563:14:15"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7563:21:15"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "7553:2:15"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7553:32:15"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7546:6:15"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7546:40:15"
                  },
                  "nodeType": "YulIf",
                  "src": "7543:2:15"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7526:5:15",
                "type": ""
              }
            ],
            "src": "7493:116:15"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_GreenCertificate_$1428_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_GreenCertificate_$1428_to_t_address(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n\n        mstore(add(pos, 0), \"Company is not certified\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr__to_t_address_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_GreenCertificate_$1428__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_GreenCertificate_$1428_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_contract$_GreenCertificate_$1428_to_t_address(value) -> converted {\n        converted := convert_t_contract$_GreenCertificate_$1428_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_GreenCertificate_$1428_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 15,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "144:1921:3:-:0;;;965:50;;;;;;;;;;998:10;989:6;;:19;;;;;;;;;;;;;;;;;;144:1921;;;;;;",
  "deployedSourceMap": "144:1921:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1021:743;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;673:62;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1770:293;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;484:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;741:51;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1021:743;591:6;;;;;;;;;;577:20;;:10;:20;;;569:29;;;;;;1227:5:::1;1195:37;;:19;:28;1215:7;1195:28;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;1192:358;;;1282:31;1337:7;1316:29;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;1282:63;;1390:4;1359:19;:28;1379:7;1359:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;1438:14;1408:18;:27;1427:7;1408:27;;;;;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;1503:36;1524:14;1503:36;;;;;;:::i;:::-;;;;;;;;1192:358;;1596:28;1627:18;:27;1646:7;1627:27;;;;;;;;;;;;;;;;;;;;;;;;;1596:58;;1664:11;:22;;;1687:7;1664:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1713:38;1734:7;1743;1713:38;;;;;;;:::i;:::-;;;;;;;;608:1;1021:743:::0;;:::o;673:62::-;;;;;;;;;;;;;;;;;;;;;;:::o;1770:293::-;1851:4;1875:19;:28;1895:7;1875:28;;;;;;;;;;;;;;;;;;;;;;;;;1867:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;1942:28;1973:18;:27;1992:7;1973:27;;;;;;;;;;;;;;;;;;;;;;;;;1942:58;;2017:11;:30;;;2048:7;2017:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2010:46;;;1770:293;;;;:::o;484:21::-;;;;;;;;;;;;:::o;741:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:344:15:-;;110:65;125:49;167:6;125:49;:::i;:::-;110:65;:::i;:::-;101:74;;198:6;191:5;184:21;236:4;229:5;225:16;274:3;265:6;260:3;256:16;253:25;250:2;;;291:1;288;281:12;250:2;304:41;338:6;333:3;328;304:41;:::i;:::-;91:260;;;;;;:::o;357:139::-;;441:6;428:20;419:29;;457:33;484:5;457:33;:::i;:::-;409:87;;;;:::o;502:137::-;;587:6;581:13;572:22;;603:30;627:5;603:30;:::i;:::-;562:77;;;;:::o;659:273::-;;764:3;757:4;749:6;745:17;741:27;731:2;;782:1;779;772:12;731:2;822:6;809:20;847:79;922:3;914:6;907:4;899:6;895:17;847:79;:::i;:::-;838:88;;721:211;;;;;:::o;938:262::-;;1046:2;1034:9;1025:7;1021:23;1017:32;1014:2;;;1062:1;1059;1052:12;1014:2;1105:1;1130:53;1175:7;1166:6;1155:9;1151:22;1130:53;:::i;:::-;1120:63;;1076:117;1004:196;;;;:::o;1206:520::-;;;1341:2;1329:9;1320:7;1316:23;1312:32;1309:2;;;1357:1;1354;1347:12;1309:2;1400:1;1425:53;1470:7;1461:6;1450:9;1446:22;1425:53;:::i;:::-;1415:63;;1371:117;1555:2;1544:9;1540:18;1527:32;1586:18;1578:6;1575:30;1572:2;;;1618:1;1615;1608:12;1572:2;1646:63;1701:7;1692:6;1681:9;1677:22;1646:63;:::i;:::-;1636:73;;1498:221;1299:427;;;;;:::o;1732:278::-;;1848:2;1836:9;1827:7;1823:23;1819:32;1816:2;;;1864:1;1861;1854:12;1816:2;1907:1;1932:61;1985:7;1976:6;1965:9;1961:22;1932:61;:::i;:::-;1922:71;;1878:125;1806:204;;;;:::o;2016:118::-;2103:24;2121:5;2103:24;:::i;:::-;2098:3;2091:37;2081:53;;:::o;2140:109::-;2221:21;2236:5;2221:21;:::i;:::-;2216:3;2209:34;2199:50;;:::o;2255:181::-;2367:62;2423:5;2367:62;:::i;:::-;2362:3;2355:75;2345:91;;:::o;2442:364::-;;2558:39;2591:5;2558:39;:::i;:::-;2613:71;2677:6;2672:3;2613:71;:::i;:::-;2606:78;;2693:52;2738:6;2733:3;2726:4;2719:5;2715:16;2693:52;:::i;:::-;2770:29;2792:6;2770:29;:::i;:::-;2765:3;2761:39;2754:46;;2534:272;;;;;:::o;2812:322::-;;2975:67;3039:2;3034:3;2975:67;:::i;:::-;2968:74;;3072:26;3068:1;3063:3;3059:11;3052:47;3125:2;3120:3;3116:12;3109:19;;2958:176;;;:::o;3140:222::-;;3271:2;3260:9;3256:18;3248:26;;3284:71;3352:1;3341:9;3337:17;3328:6;3284:71;:::i;:::-;3238:124;;;;:::o;3368:423::-;;3547:2;3536:9;3532:18;3524:26;;3560:71;3628:1;3617:9;3613:17;3604:6;3560:71;:::i;:::-;3678:9;3672:4;3668:20;3663:2;3652:9;3648:18;3641:48;3706:78;3779:4;3770:6;3706:78;:::i;:::-;3698:86;;3514:277;;;;;:::o;3797:210::-;;3922:2;3911:9;3907:18;3899:26;;3935:65;3997:1;3986:9;3982:17;3973:6;3935:65;:::i;:::-;3889:118;;;;:::o;4013:272::-;;4169:2;4158:9;4154:18;4146:26;;4182:96;4275:1;4264:9;4260:17;4251:6;4182:96;:::i;:::-;4136:149;;;;:::o;4291:313::-;;4442:2;4431:9;4427:18;4419:26;;4491:9;4485:4;4481:20;4477:1;4466:9;4462:17;4455:47;4519:78;4592:4;4583:6;4519:78;:::i;:::-;4511:86;;4409:195;;;;:::o;4610:419::-;;4814:2;4803:9;4799:18;4791:26;;4863:9;4857:4;4853:20;4849:1;4838:9;4834:17;4827:47;4891:131;5017:4;4891:131;:::i;:::-;4883:139;;4781:248;;;:::o;5035:283::-;;5101:2;5095:9;5085:19;;5143:4;5135:6;5131:17;5250:6;5238:10;5235:22;5214:18;5202:10;5199:34;5196:62;5193:2;;;5261:18;;:::i;:::-;5193:2;5301:10;5297:2;5290:22;5075:243;;;;:::o;5324:332::-;;5476:18;5468:6;5465:30;5462:2;;;5498:18;;:::i;:::-;5462:2;5583:4;5579:9;5572:4;5564:6;5560:17;5556:33;5548:41;;5644:4;5638;5634:15;5626:23;;5391:265;;;:::o;5662:99::-;;5748:5;5742:12;5732:22;;5721:40;;;:::o;5767:169::-;;5885:6;5880:3;5873:19;5925:4;5920:3;5916:14;5901:29;;5863:73;;;;:::o;5942:96::-;;6008:24;6026:5;6008:24;:::i;:::-;5997:35;;5987:51;;;:::o;6044:90::-;;6121:5;6114:13;6107:21;6096:32;;6086:48;;;:::o;6140:126::-;;6217:42;6210:5;6206:54;6195:65;;6185:81;;;:::o;6272:176::-;;6380:62;6436:5;6380:62;:::i;:::-;6367:75;;6357:91;;;:::o;6454:138::-;;6562:24;6580:5;6562:24;:::i;:::-;6549:37;;6539:53;;;:::o;6598:154::-;6682:6;6677:3;6672;6659:30;6744:1;6735:6;6730:3;6726:16;6719:27;6649:103;;;:::o;6758:307::-;6826:1;6836:113;6850:6;6847:1;6844:13;6836:113;;;6935:1;6930:3;6926:11;6920:18;6916:1;6911:3;6907:11;6900:39;6872:2;6869:1;6865:10;6860:15;;6836:113;;;6967:6;6964:1;6961:13;6958:2;;;7047:1;7038:6;7033:3;7029:16;7022:27;6958:2;6807:258;;;;:::o;7071:180::-;7119:77;7116:1;7109:88;7216:4;7213:1;7206:15;7240:4;7237:1;7230:15;7257:102;;7349:2;7345:7;7340:2;7333:5;7329:14;7325:28;7315:38;;7305:54;;;:::o;7365:122::-;7438:24;7456:5;7438:24;:::i;:::-;7431:5;7428:35;7418:2;;7477:1;7474;7467:12;7418:2;7408:79;:::o;7493:116::-;7563:21;7578:5;7563:21;:::i;:::-;7556:5;7553:32;7543:2;;7599:1;7596;7589:12;7543:2;7533:76;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0;\n\nimport \"./GreenCertificate.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\ncontract GreenCertifier {\n    using Address for address;\n\n    // Event to be emmitted when a company certificate is created\n    event CompanyCertification(GreenCertificate certificate);\n\n    // Event to be emmitted when a project is added\n    event ProjectCertification(address company, string project);\n\n\n    // Owner of this contract\n    address public _owner;\n\n\n    // function modifier\n    modifier onlyOwner() {\n        require(msg.sender == _owner);\n        _;\n    }\n\n    // Maps company address to a green certificate\n    mapping(address => GreenCertificate) public _greenCertificates;\n    mapping(address => bool) public _certifiedCompanies;\n    // Two options for mapping\n    //mapping (uint256 => GreenCertificate) private _greenCertificates;\n    //mapping (uint256 => address) private _greenCertificates;\n\n    constructor() {\n        _owner = msg.sender;\n    }\n\n    function createCertificate(address company, string memory project) external onlyOwner {\n        // Create certificate for the company if it already does not exist\n        if(_certifiedCompanies[company] == false) {\n            // Create certificate\n            GreenCertificate newCertificate = new GreenCertificate(company);\n            _certifiedCompanies[company] = true;\n            _greenCertificates[company] = newCertificate;\n\n            // Create an event\n            emit CompanyCertification(newCertificate);\n        } \n\n        // Add project to the list\n        GreenCertificate certificate = _greenCertificates[company];\n        certificate.addProject(project);   \n        emit ProjectCertification(company, project);      \n    }\n\n    function isCertified(address company, string memory project) public view returns(bool) {\n        require(_certifiedCompanies[company], \"Company is not certified\");\n        GreenCertificate certificate = _greenCertificates[company];\n        return certificate.isCertifiedProject(project);\n    }\n}\n\n",
  "sourcePath": "/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertifier.sol",
  "ast": {
    "absolutePath": "/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertifier.sol",
    "exportedSymbols": {
      "Address": [
        2952
      ],
      "GreenCertificate": [
        1428
      ],
      "GreenCertifier": [
        1567
      ]
    },
    "id": 1568,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1430,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:3"
      },
      {
        "absolutePath": "/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertificate.sol",
        "file": "./GreenCertificate.sol",
        "id": 1431,
        "nodeType": "ImportDirective",
        "scope": 1568,
        "sourceUnit": 1429,
        "src": "58:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 1432,
        "nodeType": "ImportDirective",
        "scope": 1568,
        "sourceUnit": 2953,
        "src": "91:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1428
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1567,
        "linearizedBaseContracts": [
          1567
        ],
        "name": "GreenCertifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1435,
            "libraryName": {
              "id": 1433,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2952,
              "src": "180:7:3"
            },
            "nodeType": "UsingForDirective",
            "src": "174:26:3",
            "typeName": {
              "id": 1434,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "192:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "anonymous": false,
            "id": 1440,
            "name": "CompanyCertification",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1438,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "certificate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1440,
                  "src": "299:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                    "typeString": "contract GreenCertificate"
                  },
                  "typeName": {
                    "id": 1437,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1436,
                      "name": "GreenCertificate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1428,
                      "src": "299:16:3"
                    },
                    "referencedDeclaration": 1428,
                    "src": "299:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:30:3"
            },
            "src": "272:57:3"
          },
          {
            "anonymous": false,
            "id": 1446,
            "name": "ProjectCertification",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1442,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 1446,
                  "src": "414:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1444,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 1446,
                  "src": "431:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1443,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "413:33:3"
            },
            "src": "387:60:3"
          },
          {
            "constant": false,
            "functionSelector": "b2bdfa7b",
            "id": 1448,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 1567,
            "src": "484:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1447,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "484:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1458,
              "nodeType": "Block",
              "src": "559:57:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1451,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "577:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "577:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1453,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "591:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "577:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "569:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1456,
                  "nodeType": "ExpressionStatement",
                  "src": "569:29:3"
                },
                {
                  "id": 1457,
                  "nodeType": "PlaceholderStatement",
                  "src": "608:1:3"
                }
              ]
            },
            "id": 1459,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "556:2:3"
            },
            "src": "538:78:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "5a3987fe",
            "id": 1464,
            "mutability": "mutable",
            "name": "_greenCertificates",
            "nodeType": "VariableDeclaration",
            "scope": 1567,
            "src": "673:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$1428_$",
              "typeString": "mapping(address => contract GreenCertificate)"
            },
            "typeName": {
              "id": 1463,
              "keyType": {
                "id": 1460,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "681:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "673:36:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$1428_$",
                "typeString": "mapping(address => contract GreenCertificate)"
              },
              "valueType": {
                "id": 1462,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1461,
                  "name": "GreenCertificate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1428,
                  "src": "692:16:3"
                },
                "referencedDeclaration": 1428,
                "src": "692:16:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                  "typeString": "contract GreenCertificate"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f755de72",
            "id": 1468,
            "mutability": "mutable",
            "name": "_certifiedCompanies",
            "nodeType": "VariableDeclaration",
            "scope": 1567,
            "src": "741:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1467,
              "keyType": {
                "id": 1465,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "749:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "741:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1466,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "760:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1476,
              "nodeType": "Block",
              "src": "979:36:3",
              "statements": [
                {
                  "expression": {
                    "id": 1474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1471,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1448,
                      "src": "989:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1472,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "998:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "998:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "989:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1475,
                  "nodeType": "ExpressionStatement",
                  "src": "989:19:3"
                }
              ]
            },
            "id": 1477,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "976:2:3"
            },
            "returnParameters": {
              "id": 1470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:0:3"
            },
            "scope": 1567,
            "src": "965:50:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1536,
              "nodeType": "Block",
              "src": "1107:657:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1486,
                        "name": "_certifiedCompanies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1468,
                        "src": "1195:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1488,
                      "indexExpression": {
                        "id": 1487,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "1215:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1195:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1227:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1195:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1517,
                  "nodeType": "IfStatement",
                  "src": "1192:358:3",
                  "trueBody": {
                    "id": 1516,
                    "nodeType": "Block",
                    "src": "1234:316:3",
                    "statements": [
                      {
                        "assignments": [
                          1493
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1493,
                            "mutability": "mutable",
                            "name": "newCertificate",
                            "nodeType": "VariableDeclaration",
                            "scope": 1516,
                            "src": "1282:31:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                              "typeString": "contract GreenCertificate"
                            },
                            "typeName": {
                              "id": 1492,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1491,
                                "name": "GreenCertificate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1428,
                                "src": "1282:16:3"
                              },
                              "referencedDeclaration": 1428,
                              "src": "1282:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                                "typeString": "contract GreenCertificate"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1499,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1497,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "1337:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1316:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_GreenCertificate_$1428_$",
                              "typeString": "function (address) returns (contract GreenCertificate)"
                            },
                            "typeName": {
                              "id": 1495,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1494,
                                "name": "GreenCertificate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1428,
                                "src": "1320:16:3"
                              },
                              "referencedDeclaration": 1428,
                              "src": "1320:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                                "typeString": "contract GreenCertificate"
                              }
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1316:29:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                            "typeString": "contract GreenCertificate"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1282:63:3"
                      },
                      {
                        "expression": {
                          "id": 1504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1500,
                              "name": "_certifiedCompanies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1468,
                              "src": "1359:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1502,
                            "indexExpression": {
                              "id": 1501,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "1379:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1359:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1390:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1359:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1505,
                        "nodeType": "ExpressionStatement",
                        "src": "1359:35:3"
                      },
                      {
                        "expression": {
                          "id": 1510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1506,
                              "name": "_greenCertificates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1464,
                              "src": "1408:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$1428_$",
                                "typeString": "mapping(address => contract GreenCertificate)"
                              }
                            },
                            "id": 1508,
                            "indexExpression": {
                              "id": 1507,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "1427:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1408:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                              "typeString": "contract GreenCertificate"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1509,
                            "name": "newCertificate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1493,
                            "src": "1438:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                              "typeString": "contract GreenCertificate"
                            }
                          },
                          "src": "1408:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                            "typeString": "contract GreenCertificate"
                          }
                        },
                        "id": 1511,
                        "nodeType": "ExpressionStatement",
                        "src": "1408:44:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1513,
                              "name": "newCertificate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1493,
                              "src": "1524:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                                "typeString": "contract GreenCertificate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                                "typeString": "contract GreenCertificate"
                              }
                            ],
                            "id": 1512,
                            "name": "CompanyCertification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1440,
                            "src": "1503:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_GreenCertificate_$1428_$returns$__$",
                              "typeString": "function (contract GreenCertificate)"
                            }
                          },
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1503:36:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1515,
                        "nodeType": "EmitStatement",
                        "src": "1498:41:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1520,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "1596:28:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                        "typeString": "contract GreenCertificate"
                      },
                      "typeName": {
                        "id": 1519,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1518,
                          "name": "GreenCertificate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1428,
                          "src": "1596:16:3"
                        },
                        "referencedDeclaration": 1428,
                        "src": "1596:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1524,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1521,
                      "name": "_greenCertificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1464,
                      "src": "1627:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$1428_$",
                        "typeString": "mapping(address => contract GreenCertificate)"
                      }
                    },
                    "id": 1523,
                    "indexExpression": {
                      "id": 1522,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "1646:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1627:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1596:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1528,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "1687:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 1525,
                        "name": "certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1520,
                        "src": "1664:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 1527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addProject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1388,
                      "src": "1664:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 1529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1664:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1530,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:31:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1532,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "1734:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1533,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "1743:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1531,
                      "name": "ProjectCertification",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1446,
                      "src": "1713:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1713:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "EmitStatement",
                  "src": "1708:43:3"
                }
              ]
            },
            "functionSelector": "00896eee",
            "id": 1537,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1484,
                "modifierName": {
                  "id": 1483,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1459,
                  "src": "1097:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1097:9:3"
              }
            ],
            "name": "createCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "1048:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "1065:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1047:40:3"
            },
            "returnParameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1107:0:3"
            },
            "scope": 1567,
            "src": "1021:743:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1565,
              "nodeType": "Block",
              "src": "1857:206:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1547,
                          "name": "_certifiedCompanies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1468,
                          "src": "1875:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1549,
                        "indexExpression": {
                          "id": 1548,
                          "name": "company",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1539,
                          "src": "1895:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1875:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d70616e79206973206e6f7420636572746966696564",
                        "id": 1550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1905:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc",
                          "typeString": "literal_string \"Company is not certified\""
                        },
                        "value": "Company is not certified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc",
                          "typeString": "literal_string \"Company is not certified\""
                        }
                      ],
                      "id": 1546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1867:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:65:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1552,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:65:3"
                },
                {
                  "assignments": [
                    1555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1555,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nodeType": "VariableDeclaration",
                      "scope": 1565,
                      "src": "1942:28:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                        "typeString": "contract GreenCertificate"
                      },
                      "typeName": {
                        "id": 1554,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1553,
                          "name": "GreenCertificate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1428,
                          "src": "1942:16:3"
                        },
                        "referencedDeclaration": 1428,
                        "src": "1942:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1559,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1556,
                      "name": "_greenCertificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1464,
                      "src": "1973:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$1428_$",
                        "typeString": "mapping(address => contract GreenCertificate)"
                      }
                    },
                    "id": 1558,
                    "indexExpression": {
                      "id": 1557,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1539,
                      "src": "1992:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1973:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1942:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1562,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1541,
                        "src": "2048:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 1560,
                        "name": "certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "2017:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 1561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isCertifiedProject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1427,
                      "src": "2017:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) view external returns (bool)"
                      }
                    },
                    "id": 1563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2017:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1545,
                  "id": 1564,
                  "nodeType": "Return",
                  "src": "2010:46:3"
                }
              ]
            },
            "functionSelector": "6b3b848a",
            "id": 1566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCertified",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "1791:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1541,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "1808:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1540,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1790:40:3"
            },
            "returnParameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "1851:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1851:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1850:6:3"
            },
            "scope": 1567,
            "src": "1770:293:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1568,
        "src": "144:1921:3"
      }
    ],
    "src": "32:2035:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertifier.sol",
    "exportedSymbols": {
      "Address": [
        2952
      ],
      "GreenCertificate": [
        1428
      ],
      "GreenCertifier": [
        1567
      ]
    },
    "id": 1568,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1430,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:3"
      },
      {
        "absolutePath": "/Users/leena/Documents/Coding/Blockchain_Green_Bonds/testProjects/OZ_test/contracts/GreenCertificate.sol",
        "file": "./GreenCertificate.sol",
        "id": 1431,
        "nodeType": "ImportDirective",
        "scope": 1568,
        "sourceUnit": 1429,
        "src": "58:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 1432,
        "nodeType": "ImportDirective",
        "scope": 1568,
        "sourceUnit": 2953,
        "src": "91:51:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1428
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1567,
        "linearizedBaseContracts": [
          1567
        ],
        "name": "GreenCertifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1435,
            "libraryName": {
              "id": 1433,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2952,
              "src": "180:7:3"
            },
            "nodeType": "UsingForDirective",
            "src": "174:26:3",
            "typeName": {
              "id": 1434,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "192:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "anonymous": false,
            "id": 1440,
            "name": "CompanyCertification",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1438,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "certificate",
                  "nodeType": "VariableDeclaration",
                  "scope": 1440,
                  "src": "299:28:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                    "typeString": "contract GreenCertificate"
                  },
                  "typeName": {
                    "id": 1437,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1436,
                      "name": "GreenCertificate",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1428,
                      "src": "299:16:3"
                    },
                    "referencedDeclaration": 1428,
                    "src": "299:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "298:30:3"
            },
            "src": "272:57:3"
          },
          {
            "anonymous": false,
            "id": 1446,
            "name": "ProjectCertification",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1445,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1442,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 1446,
                  "src": "414:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1444,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 1446,
                  "src": "431:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1443,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "413:33:3"
            },
            "src": "387:60:3"
          },
          {
            "constant": false,
            "functionSelector": "b2bdfa7b",
            "id": 1448,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 1567,
            "src": "484:21:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1447,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "484:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1458,
              "nodeType": "Block",
              "src": "559:57:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1451,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "577:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "577:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1453,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1448,
                          "src": "591:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "577:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1450,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "569:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:29:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1456,
                  "nodeType": "ExpressionStatement",
                  "src": "569:29:3"
                },
                {
                  "id": 1457,
                  "nodeType": "PlaceholderStatement",
                  "src": "608:1:3"
                }
              ]
            },
            "id": 1459,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "556:2:3"
            },
            "src": "538:78:3",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "5a3987fe",
            "id": 1464,
            "mutability": "mutable",
            "name": "_greenCertificates",
            "nodeType": "VariableDeclaration",
            "scope": 1567,
            "src": "673:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$1428_$",
              "typeString": "mapping(address => contract GreenCertificate)"
            },
            "typeName": {
              "id": 1463,
              "keyType": {
                "id": 1460,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "681:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "673:36:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$1428_$",
                "typeString": "mapping(address => contract GreenCertificate)"
              },
              "valueType": {
                "id": 1462,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1461,
                  "name": "GreenCertificate",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1428,
                  "src": "692:16:3"
                },
                "referencedDeclaration": 1428,
                "src": "692:16:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                  "typeString": "contract GreenCertificate"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f755de72",
            "id": 1468,
            "mutability": "mutable",
            "name": "_certifiedCompanies",
            "nodeType": "VariableDeclaration",
            "scope": 1567,
            "src": "741:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1467,
              "keyType": {
                "id": 1465,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "749:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "741:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1466,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "760:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1476,
              "nodeType": "Block",
              "src": "979:36:3",
              "statements": [
                {
                  "expression": {
                    "id": 1474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1471,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1448,
                      "src": "989:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1472,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "998:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "998:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "989:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1475,
                  "nodeType": "ExpressionStatement",
                  "src": "989:19:3"
                }
              ]
            },
            "id": 1477,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "976:2:3"
            },
            "returnParameters": {
              "id": 1470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:0:3"
            },
            "scope": 1567,
            "src": "965:50:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1536,
              "nodeType": "Block",
              "src": "1107:657:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1486,
                        "name": "_certifiedCompanies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1468,
                        "src": "1195:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1488,
                      "indexExpression": {
                        "id": 1487,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "1215:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1195:28:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 1489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1227:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1195:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1517,
                  "nodeType": "IfStatement",
                  "src": "1192:358:3",
                  "trueBody": {
                    "id": 1516,
                    "nodeType": "Block",
                    "src": "1234:316:3",
                    "statements": [
                      {
                        "assignments": [
                          1493
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1493,
                            "mutability": "mutable",
                            "name": "newCertificate",
                            "nodeType": "VariableDeclaration",
                            "scope": 1516,
                            "src": "1282:31:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                              "typeString": "contract GreenCertificate"
                            },
                            "typeName": {
                              "id": 1492,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1491,
                                "name": "GreenCertificate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1428,
                                "src": "1282:16:3"
                              },
                              "referencedDeclaration": 1428,
                              "src": "1282:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                                "typeString": "contract GreenCertificate"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1499,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1497,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "1337:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "1316:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_GreenCertificate_$1428_$",
                              "typeString": "function (address) returns (contract GreenCertificate)"
                            },
                            "typeName": {
                              "id": 1495,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1494,
                                "name": "GreenCertificate",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1428,
                                "src": "1320:16:3"
                              },
                              "referencedDeclaration": 1428,
                              "src": "1320:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                                "typeString": "contract GreenCertificate"
                              }
                            }
                          },
                          "id": 1498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1316:29:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                            "typeString": "contract GreenCertificate"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1282:63:3"
                      },
                      {
                        "expression": {
                          "id": 1504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1500,
                              "name": "_certifiedCompanies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1468,
                              "src": "1359:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1502,
                            "indexExpression": {
                              "id": 1501,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "1379:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1359:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1390:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1359:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1505,
                        "nodeType": "ExpressionStatement",
                        "src": "1359:35:3"
                      },
                      {
                        "expression": {
                          "id": 1510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1506,
                              "name": "_greenCertificates",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1464,
                              "src": "1408:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$1428_$",
                                "typeString": "mapping(address => contract GreenCertificate)"
                              }
                            },
                            "id": 1508,
                            "indexExpression": {
                              "id": 1507,
                              "name": "company",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1479,
                              "src": "1427:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1408:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                              "typeString": "contract GreenCertificate"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1509,
                            "name": "newCertificate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1493,
                            "src": "1438:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                              "typeString": "contract GreenCertificate"
                            }
                          },
                          "src": "1408:44:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                            "typeString": "contract GreenCertificate"
                          }
                        },
                        "id": 1511,
                        "nodeType": "ExpressionStatement",
                        "src": "1408:44:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1513,
                              "name": "newCertificate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1493,
                              "src": "1524:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                                "typeString": "contract GreenCertificate"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                                "typeString": "contract GreenCertificate"
                              }
                            ],
                            "id": 1512,
                            "name": "CompanyCertification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1440,
                            "src": "1503:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_contract$_GreenCertificate_$1428_$returns$__$",
                              "typeString": "function (contract GreenCertificate)"
                            }
                          },
                          "id": 1514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1503:36:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1515,
                        "nodeType": "EmitStatement",
                        "src": "1498:41:3"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1520,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nodeType": "VariableDeclaration",
                      "scope": 1536,
                      "src": "1596:28:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                        "typeString": "contract GreenCertificate"
                      },
                      "typeName": {
                        "id": 1519,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1518,
                          "name": "GreenCertificate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1428,
                          "src": "1596:16:3"
                        },
                        "referencedDeclaration": 1428,
                        "src": "1596:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1524,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1521,
                      "name": "_greenCertificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1464,
                      "src": "1627:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$1428_$",
                        "typeString": "mapping(address => contract GreenCertificate)"
                      }
                    },
                    "id": 1523,
                    "indexExpression": {
                      "id": 1522,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1479,
                      "src": "1646:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1627:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1596:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1528,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "1687:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 1525,
                        "name": "certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1520,
                        "src": "1664:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 1527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addProject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1388,
                      "src": "1664:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 1529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1664:31:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1530,
                  "nodeType": "ExpressionStatement",
                  "src": "1664:31:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1532,
                        "name": "company",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1479,
                        "src": "1734:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1533,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1481,
                        "src": "1743:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1531,
                      "name": "ProjectCertification",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1446,
                      "src": "1713:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 1534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1713:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1535,
                  "nodeType": "EmitStatement",
                  "src": "1708:43:3"
                }
              ]
            },
            "functionSelector": "00896eee",
            "id": 1537,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1484,
                "modifierName": {
                  "id": 1483,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1459,
                  "src": "1097:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1097:9:3"
              }
            ],
            "name": "createCertificate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1479,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "1048:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1048:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1481,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 1537,
                  "src": "1065:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1480,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1047:40:3"
            },
            "returnParameters": {
              "id": 1485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1107:0:3"
            },
            "scope": 1567,
            "src": "1021:743:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1565,
              "nodeType": "Block",
              "src": "1857:206:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1547,
                          "name": "_certifiedCompanies",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1468,
                          "src": "1875:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1549,
                        "indexExpression": {
                          "id": 1548,
                          "name": "company",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1539,
                          "src": "1895:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1875:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d70616e79206973206e6f7420636572746966696564",
                        "id": 1550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1905:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc",
                          "typeString": "literal_string \"Company is not certified\""
                        },
                        "value": "Company is not certified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_413ebce1aaa34f86b8f9196a43ef7164dea09733b0b877a061ed6f4c9fa264fc",
                          "typeString": "literal_string \"Company is not certified\""
                        }
                      ],
                      "id": 1546,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1867:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1867:65:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1552,
                  "nodeType": "ExpressionStatement",
                  "src": "1867:65:3"
                },
                {
                  "assignments": [
                    1555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1555,
                      "mutability": "mutable",
                      "name": "certificate",
                      "nodeType": "VariableDeclaration",
                      "scope": 1565,
                      "src": "1942:28:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                        "typeString": "contract GreenCertificate"
                      },
                      "typeName": {
                        "id": 1554,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1553,
                          "name": "GreenCertificate",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1428,
                          "src": "1942:16:3"
                        },
                        "referencedDeclaration": 1428,
                        "src": "1942:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1559,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1556,
                      "name": "_greenCertificates",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1464,
                      "src": "1973:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_contract$_GreenCertificate_$1428_$",
                        "typeString": "mapping(address => contract GreenCertificate)"
                      }
                    },
                    "id": 1558,
                    "indexExpression": {
                      "id": 1557,
                      "name": "company",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1539,
                      "src": "1992:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1973:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                      "typeString": "contract GreenCertificate"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1942:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1562,
                        "name": "project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1541,
                        "src": "2048:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 1560,
                        "name": "certificate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1555,
                        "src": "2017:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GreenCertificate_$1428",
                          "typeString": "contract GreenCertificate"
                        }
                      },
                      "id": 1561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isCertifiedProject",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1427,
                      "src": "2017:30:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (string memory) view external returns (bool)"
                      }
                    },
                    "id": 1563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2017:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1545,
                  "id": 1564,
                  "nodeType": "Return",
                  "src": "2010:46:3"
                }
              ]
            },
            "functionSelector": "6b3b848a",
            "id": 1566,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isCertified",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1539,
                  "mutability": "mutable",
                  "name": "company",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "1791:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1541,
                  "mutability": "mutable",
                  "name": "project",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "1808:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1540,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1808:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1790:40:3"
            },
            "returnParameters": {
              "id": 1545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1544,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1566,
                  "src": "1851:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1543,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1851:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1850:6:3"
            },
            "scope": 1567,
            "src": "1770:293:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1568,
        "src": "144:1921:3"
      }
    ],
    "src": "32:2035:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x92bFB3a93174Adc3D359b66DA0f1484334cC1d5d",
      "transactionHash": "0x5c64d0f4dce12a9dffb0fcab6b9f024db9ee3ca9a24342d4bc4e67dbc11222fd"
    },
    "1624527601382": {
      "events": {},
      "links": {},
      "address": "0xDfB2A058A5f5af0f31e3F1038b7C262f4DA4713a",
      "transactionHash": "0x1a3312e6097eb896c10748852ee5a44ff1ccdf1441a4b7b622897bf582078496"
    },
    "1624528216588": {
      "events": {},
      "links": {},
      "address": "0x06f55661D01C8cE2a9cd43aA11400e2463C81763",
      "transactionHash": "0x4d13b0d9c8b3f8f55f644da56aee9f2be99a6a62a1c6f747a78aa9e09a1d791e"
    },
    "1624528952186": {
      "events": {},
      "links": {},
      "address": "0x65eB77fa6F912d73be33823b2827b70AabDD94A9",
      "transactionHash": "0xd0032c118f2e9d471a1d7fa2b066736f95f775be4b1954f150d54b2f74dcd4ab"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-08T10:57:27.961Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}